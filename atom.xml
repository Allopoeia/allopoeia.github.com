<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

<title>Allopoeia</title>
<link href="http://allopoeia.komiga.com/atom.xml" rel="self" />
<link href="http://allopoeia.komiga.com" />
<updated>2020-07-10T05:08:46+0000</updated>
<id>http://allopoeia.komiga.com</id>
<author>
	<name>Allopoeia</name>
	<uri>http://allopoeia.komiga.com</uri>
</author>

<entry>
	<link href="http://allopoeia.komiga.com/art/what-is-resistance/" />
	<id>http://allopoeia.komiga.com/art/what-is-resistance/</id>

	<category term="art" label="Art"/>

	<title>What is resistance?</title>

	<rights type="html"><![CDATA[&copy; 2017 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2017-01-25T23:31:00+0000</published>
	<updated>2017-01-25T23:31:00+0000</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<p>What is resistance?<br />
when the highest terror reigns here?<br />
and simulacra threaten all nations?</p>

<p>Before the fall,<br />
as camps swell,<br />
as walls rise,<br />
as wars rage,</p>

<p>Will we fight?<br />
against bombs, bullets, &amp; batons?<br />
when all that's left are bricks &amp; bones?</p>

<p>Will we still yield?<br />
our rights?<br />
our principles?<br />
our beating hearts?</p>

	]]></content>
</entry>
<entry>
	<link href="http://allopoeia.komiga.com/dev/pickle-a-static-site-generator/" />
	<id>http://allopoeia.komiga.com/dev/pickle-a-static-site-generator/</id>

	<category term="dev" label="Dev"/>

	<title>Pickle, a static site generator</title>

	<rights type="html"><![CDATA[&copy; 2016 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2016-01-17T17:15:00-0500</published>
	<updated>2016-01-17T17:15:00-0500</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<p>Three years after deciding I wanted to make my own site generator, I have finally done so. The breaking point was <a target="_blank" href="http://jekyllrb.com">Jekyll</a> 3.0 ceasing to <a target="_blank" href="http://jekyllrb.com/docs/upgrading/2-to-3/#layout-metadata">layer</a> layout and content metadata.</p>

<p>Working around this with the design of Allopoeia and my homesite would have been very annoying, as I supplied configuration defaults within layout metadata for pages, to say nothing of dealing with Jekyll again. So, instead, I started looking around for an alternative system. Surely, by now, there would be a site generator without crippled templating!</p>

<p>After struggling with <a target="_blank" href="http://gohugo.io">Hugo</a> and its atrocious templating via Go's <a target="_blank" href="https://golang.org/pkg/text/template/">text/template</a> package, I gave up, and decided it would be far more worthwhile to make my own system.</p>

<p>The result is <a target="_blank" href="https://github.com/komiga/pickle">Pickle</a> (the same name I came up with years ago), which took just under two weeks of focus before it was functional enough to start refactoring my websites. It uses <a target="_blank" href="https://github.com/komiga/togo">togo</a> and the tiny <a target="_blank" href="https://github.com/vurtun/mmx">mmx</a> web server library for the internals, but the majority of it is written in Lua.</p>

<p>The distribution of language sits at 1,216<sub>loc</sub> of Lua &amp; 711<sub>loc</sub> of C++, just under 2,000<sub>loc</sub> total. That's rather slim for a site generator, I'd imagine. Of course, this doesn't say how much is saved by using external libraries, but it's no different from the situation with Jekyll and Hugo, which make extensive use of their language ecosystems.</p>

<p>togo had yet to see Lua integration, and was lacking on the filesystem interface, so significant upstart work was needed alongside Pickle, accounting for the span of time before Pickle was functional. In fact, more code was touched in togo: 2,559<sub>loc</sub> across 58 files.</p>

<p>Some of the discovery work for Lua integration was already done with Quanta (forthcoming), but was rudimentary. Taking the time to do it right within togo has improved the situation greatly.</p>

<p>The templating in Pickle is straight-up Lua, the syntax of which is inspired in part by <a target="_blank" href="https://github.com/bungle/lua-resty-template">lua-resty-template</a>, which itself is similar to <a target="_blank" href="https://mustache.github.io">Mustache</a> and is inspired by yet others, I'm sure. The parser is a meager 221<sub>loc</sub> of C++, and the whole Lua interface is only 185<sub>loc</sub>.</p>

<p>Lovely, but not the greatest implementation. Layering like I was with Jekyll isn't really possible. Ironically, I didn't even design my system with the very feature that I left Jekyll for removing.</p>

<p>If you have a metatable on a Lua chunk redirecting top-level indexes to the provided template context, you only ever see the first branch. From <code>x.y.z</code>, you supply <code>context[x]</code> and never hear if the terminating index resulted in a <code>nil</code>. This is fine, that's just how Lua works.</p>

<p>I imagined using a proxy all the way until it terminated could be possible, but there are immediate red flags at the suggestion. There's no metamethod for "evaluate", so there'd be no way to tell when it terminates. At the last access, the call site would just receive the proxy, leaving no option to try alternative paths from the root.</p>

<p>The other obvious route is rewriting the indexes during template transformation, but that frankly sounds like too much hassle &amp; too much complexity for a feature that isn't really necessary.</p>

<p>Instead, in refactoring my websites, I just split out layouts that were layering and supplied the defaults directly in the content constructors during filtering. This makes much more sense, and centralizes the properties of a page. This was not even possible in vanilla Jekyll (as far as I'm aware), so I still have the upper hand despite lacking its 2.0-style layering.</p>

<p>There are other benefits, as well. With Jekyll, I had to create "includes" for basic often-used functionality: in essence, plain old functions. This was an absolute mess. With Pickle, I can write all of that in pure Lua, if I wanted to, though the unbridled power of Lua right in templates means I don't <em>have</em> to.</p>

<p>Liquid, Jekyll's template language, was simply too restricted to be useful. It results in verbose and ugly code.</p>

<p>Once the disgust for Jekyll was out of the way, I finally did some much-needed maintenance on my websites. My homesite is now more cohesive, and Allopoeia is less janky. Overall, I only shaved off maybe 200-300 lines from the combined changes to the websites, but the quality is greater.</p>

<p>Pickle takes a different approach from most static site generators I've seen. It gives you the basic functionality, the fundamentals, but makes the user build the scaffolding. Stuff that would be considered core functionality in other systems is nowhere to be seen. There is no concept of a "layout" or even a "page". It has filters, which produce outputs, and that's it. In this way, it's not really a "site generator" in the true, it's just a complicated data transformation system that happens to have a web server attached.</p>

<p>I've already thought of other uses for it outside of websites. I often write emails in Markdown on local storage, with an informal metadata syntax that lives only in my head. I usually don't send emails in HTML, but it could be useful for transformation of other properties (and statistics &amp; analysis, which I love).</p>

<p>Back to websites, though, this means you have to write some code upfront, specific to the structure of your site. Mine is a meager core at 307<sub>loc</sub>, shared between my homesite and Allopoeia. Not much baggage, and I don't have to wade around the mire of instituted structure by the generator itself. If something isn't working for the website, I can change the structure without disrupting anything else that uses Pickle.</p>

<p>All in all, a good adventure, not just for my websites, but for togo as well. Pickle has some sore spots left to mend, but it is a much welcome reprise over the previous state of affairs.</p>

	]]></content>
</entry>
<entry>
	<link href="http://allopoeia.komiga.com/dev/tentuk-journal/week-3/" />
	<id>http://allopoeia.komiga.com/dev/tentuk-journal/week-3/</id>

	<category term="dev" label="Dev"/>

	<title>Tentuk Journal: Week 3</title>

	<rights type="html"><![CDATA[&copy; 2015 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2015-02-20T23:17:00-0500</published>
	<updated>2015-02-20T23:17:00-0500</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<p>There's no comfortable way for me to say this, so here goes:</p>

<p>I can't make this game, and, technically, I haven't been making a game. The vast majority of these three weeks has been spent wrestling with the tool pipeline. That's not what I should be doing. It's not even what will make the game what I want it to be. That's the biggest realization I've come to: I can't make this game the way I want it to be.</p>

<p>Only three weeks? That's a really fast burn rate. Truth is, I took a silly thought and turned it into something it didn't want to be. I'm largely making the same mistake I made with Hord &amp; Onsang &mdash; and so soon! It's a painful realization, but one I should have had from the beginning. I let myself run along without stopping to consider the feasibility of it.</p>

<p>Tentuk won't work as a small game. I'm shoe-horning a perfect circle into a square slot orders of magnitude smaller.</p>

<p>Here's the week up to this <em>bit</em> of rational thinking:</p>

<ul>
	<li>Handle entries removed from the asset manifest by zeroing the timestamp (they'll reload if they're added back in).</li>
	<li>Multiple map texture packing (hey, that was easy!)</li>
	<li>Layer grouping and lighting config for scenes.</li>
	<li>Removed scene backdrops (scenes will use Real Ground™ now) and rotated the camera by -30° along the X axis.</li>
</ul>

<p>The last one is where I realized all I was doing was fighting the pipeline. The rotation caused the scene to take two times the space along the Y axis, meaning the ground had to be twice as long along Y, meaning I had to unscale the axis, meaning the complexity rose, in turn causing renders to be unaligned in-game, causing me to be unhappy, causing me to <em>actually start thinking</em>, causing <em>this</em>.</p>

<p>So yeah, a fast burn rate, if you want to call it that. I'm happy, though. There was something unsettling about Tentuk, and this has basically been it. I was almost half-way into the 8 weeks I somehow decided was reasonable (and what the hell was that!?), and <em>all I had been doing was fighting</em>.</p>

<p>I would be far better off to use 3D and apply some shaders to get the look I wanted. It's 2015! I don't need to bake 3D to 2D. Obviously, this means I wouldn't be able to continue using LÖVE. There wouldn't be much loss, <em>because there was hardly anything there in the first place</em>, but that is not something I should have to do when I decide a game is not realizable under the systems I'm using. I should already be using systems that allow me to make that decision and continue using what I've already built.</p>

<p>If I were making this with togo (were it reasonably complete), all of this would be "oh, okay, this is not going to work, let's load the whole scene in from the source instead", and off I would be rolling.</p>

<p>I am reverting to the previous, <em>actually well-thought-out</em> plan: continue working on togo and start <em>designing</em> a game. That word, <em>designing</em>, is very important. In design I am much more flexible to change &amp; explore; there are no systems I am working under that prohibit my choices, there are only the <em>possible</em>. The stage after/during that is where I decide how feasible the design is under the systems I want to use. Design also prevents me from falling into a project I don't actually want or know how to make. Rational thought is more easily found to me when I am not busied by <em>tooling</em>, which I actually like, apparently. I like making systems, but systems are not fruitful unless they are applied, and they inevitably increase the complexity (however little). I can't keep applying systems. At some point I have to put down the arsenal and actually make something tangible.</p>

<p>Then (on Wednesday, this was only Wednesday!), I actually played some games. First, <a target="_blank" href="http://finji.itch.io/lost-constellation">Lost Constellation</a>, followed by <a target="_blank" href="http://rubna.itch.io/lisa">lisa</a>. I realized there's so much in both of them that I loved; so much that I wasn't even thinking about with Tentuk. (I mean, let's be honest, I wasn't even thinking.) Lost Constellation is brilliant. They call it a “supplemental” to Night In The Woods, but it felt like a whole, complete game. I loved it, and I didn't even get to see all of the content! And lisa, wow. It almost feels wrong that we should see &amp; play this game rubna made for their friend. It's a cute little game, with charm beyond what should be reasonably possible. I sat basking in it for a while.</p>

<p>For all I can see, lisa is full-3D, with some clever post-processing for a beautiful pixelated look, which surprisingly has a lot of character. I've no idea how the detail is pulled off, but it's proof to me that my footing was completely wrong. I would never be able to pull off its liveliness by baking 3D to 2D.</p>

<p>I realized these games do things I love; things I want to be able to do. The witty, grasping writing in Lost Constellations, and the mechanics &amp; style &amp; charm of lisa. I'm not saying I'd make a cross between these games if I could (and all signs point to a different kind of inner style). They inspire me, and make me want to do better.</p>

<p>I feel ridiculous. I'm disappointed in myself. I'm sorry, me. I can do better than this.</p>

	]]></content>
</entry>
<entry>
	<link href="http://allopoeia.komiga.com/dev/tentuk-journal/week-2/" />
	<id>http://allopoeia.komiga.com/dev/tentuk-journal/week-2/</id>

	<category term="dev" label="Dev"/>

	<title>Tentuk Journal: Week 2</title>

	<rights type="html"><![CDATA[&copy; 2015 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2015-02-16T02:08:00-0500</published>
	<updated>2015-02-16T02:08:00-0500</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<p>Phew. An intense week of mostly <span title=":(">tooling and grunge work</span>. If there's anything I've learned from Tentuk so far, it's that tooling takes a lot of time &amp; attention. And <em>perhaps</em> that I spend too much time on it.</p>

<p>I spent 62.3 hours working on the game this week. That's 10.2 hours greater than last week, with the longest uninterrupted sequence running 4 hours and 21 minutes on February 13 (yowzers).</p>

<h2 class="separator">Week 2<span class="para-ref" id="week-2"><a href="#week-2"></a></span></h2>

<p>Here's a quick look at the progress:</p>

<ul>
	<li>Scene building was reworked to be cleaner (twice) and background props are now baked with background textures.</li>
	<li>Blender job tooling was generalized to support independent entity rendering (needed for actors and commonly used props with fixed orientations).</li>
	<li>Scrabbled together a test scene and a few test props with vertex coloring.</li>
	<li>The game codebase was created (it was all tooling before!), branching from <a target="_blank" href="https://github.com/komiga/love-kernel">love-kernel</a>.</li>
	<li>Reworked the asset system to be more like togo.</li>
	<li>Scene rendering in-game! Yay! (Twice, once broken.)</li>
</ul>

<p>I didn't get to play around with audio. There wasn't enough time with the other goals in the way. I did most of what I wanted to do, but I don't think I spent enough time feeling out the process of making scenes and props. I came to ideas about how it should work from the bit of work on the test scene and extrapolated it from there, which might end up being a detriment. In any case, the Blender tooling is certainly more flexible now. The last major tooling notches to fill in are packing textures over multiple atlases (to avoid massive texture sizes) and entity animation rendering. I have a grave suspicion that the latter one will be very bothersome due to the way Blender handles poses, and it's reasonable to assume upgrading the texture packer will probably give me a decent bundle of trouble.</p>

<p>I'm still unhappy with the lighting, and I want to rework the camera controller to support arbitrary global lights instead of the fixed ones in the scene config. That way all of the global illumination can be directed from the tooling. I could just change the properties of the existing lights, but then their names don't make any sense, and it'd be a jumbley mess debugging it in post. I'm likely going to create light objects instead.</p>

<p>I've already come to dislike rendered 3D. I had a lot of trouble trying to get rendered entity frames to line up properly (because I wasn't thinking, compounded by separation of shadows and geometry), and I <em>nearly</em> threw a fit when I thought LÖVE wouldn't let me render from textures with arbitrarily-oriented texture coordinates. Indeed, it turns out it's not possible with Quad, but, thankfully, Mesh saved the day. I have as much control as I need with Mesh, and I can get into optimization by packing all render data for an entity into a single mesh. Fancy.</p>

<p>Here's what scene rendering looks like in-game (with debug mode enabled):</p>

<div class="generic-center-text" stlye="width: 100%"><a style="display: inline-block;" target="_blank" href="http://i.imgur.com/EaTxwth.png"><img style="display: block;" src="http://i.imgur.com/EaTxwthl.png" alt="scene rendering" title="scene rendering" /></a></div>

<p>It's not very striking, but a lot of work went into it behind the <span title="heh">scene</span>. The frames drawn around the props are based on world space from the Blender data, which doesn't include the shadow. The frame on the "test" prop is incorrect because it's not calculating from the origin. It's a simple fix, and it was initially correct because it was using the pack data, but now all of that is bundled up and discarded at runtime after building meshes.</p>

<p>Using the same axes in Blender as in game space has proved very worthwhile, even when Blender's Y-up is in the opposite direction. Camera manipulation is a bit funky, but it's definitely better than trying to mentally juggle Blender Z -> game Y and so on.</p>

<p>Getting the perspective just right is going to be tricky. If I could make renders and shadows work nicely under rotation, I'd like to just rotate the whole scene a tiny bit along the X axis. It'd make the perspective cohesive instead of disparate (i.e., without rotation, movement and the background (will) suggest terrain depth, but the entities are always front-facing to the screen). These two issues are linked, since entity rendering needs to take into account casting shadows on other entities (which are masked out) and framing invisible-but-not backdrops for casting realistic(-ish) shadows on a terrain that isn't really there.</p>

<p>3D-to-2D is woe.</p>

<p>On the bright side, the asset system is pretty slick. I can reload the manifest at runtime, which automatically reloads existing assets. The build tools automatically rebuild the manifest, so it's only two steps to reloading any changes. Since scenes are assets, and due to the way the scene instance is stored, if the scene is modified, it will reload the definition and (as of soon) keep any runtime state.</p>

<p>The repository is sitting at <span title="what a nice even number">150</span> commits right now. That's actually surprising to me. I didn't think I was committing that much, and it seems like a very rapid growth in comparison with my other projects. There're huge deluges of commits on the game code, though, which is probably running at a faster pace.</p>

<h2 class="separator">Time and management<span class="para-ref" id="time-and-management"><a href="#time-and-management"></a></span></h2>

<p>I don't actually plan on working Sunday, nor most of Saturday, but these first two weeks have essentially lead to it. Everything I intended to do is done, but it took until the last hours of Sunday to pull it all off and leave it in a functional state. It takes a lot to put in 8-10 hours every day, and pushing all the way to the end of the week without a break just feeds into repeating the cycle the following week.</p>

<p>I've found that the weekend is naturally less efficient for me, so it's actually wasteful to spend that time working, even if it's to meet a deadline or complete a task list. It should be more beneficial to break during that time, and come back the next week with a refreshed psyche.</p>

<p>Another issue I've noticed is that I will go down rabbit trails or completely avoid rational thinking about a problem until I've hit a sufficiently large wall when trying to make it work the way I want. So, for the weeks that follow, I'm going to start by making the task list and conceptualize/explore all of the tasks before I start working. And when I come up against a sizable problem, I will leave the computer and work it out on paper. When I force myself to consider the problem without fumbling around in the code to make it do what I want, I oftentimes come to better solutions. It is likely that I could have avoided a lot of refactoring time spent on tooling this week if I had preconceived that props &amp; actors would share all of their properties and would be easier to handle as a shared construct.</p>

<p>Live and learn.</p>

<h2 class="separator">Timelapse<span class="para-ref" id="timelapse"><a href="#timelapse"></a></span></h2>

<p>This week's <a target="_blank" href="https://youtu.be/pM11GHxvzrY">timelapse</a> includes data from February 6-8 of last week. Unfortunately, I don't think YouTube kept the original video size, so it looks worse than the actual frames.</p>

<iframe class="generic-center" style="display: block;" width="480" height="360" src="https://www.youtube.com/embed/pM11GHxvzrY?rel=0" frameborder="0" allowfullscreen></iframe>

<p>I've settled on recording at 15s/frame, and the video is running at 10 frames/s (i.e., <span title="heh">2.5 min/s</span>). I think it runs a bit fast, but it'd probably be unreasonably long otherwise. I might consider overdubbing later on at a lower render rate, but who knows what'll happen. I can only do so much meta work.</p>

<p>That's it. That's everything. Now I must sleep. I will definitely have a skewed schedule as a result of ending so late.</p>

	]]></content>
</entry>
<entry>
	<link href="http://allopoeia.komiga.com/dev/tentuk-journal/week-1/" />
	<id>http://allopoeia.komiga.com/dev/tentuk-journal/week-1/</id>

	<category term="dev" label="Dev"/>

	<title>Tentuk Journal: Week 1</title>

	<rights type="html"><![CDATA[&copy; 2015 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2015-02-09T00:06:00-0500</published>
	<updated>2015-02-15T23:23:00-0500</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<p>I planned on expanding <a href="https://github.com/komiga/togo" target="_blank">togo</a> for use in remaking <a href="http://komiga.com/#prisma" target="_blank">Prisma</a>, but I decided to make something smaller, without using togo, before I get into <em>that</em> grind. Tentuk is my way of soft-testing the principles of togo. The project is using <a href="https://love2d.org" target="_blank">LÖVE</a>, so it won't quite match the working conditions (i.e., a Lua core instead of a C++ core), but the ideas in togo will still be applied.</p>

<h2 class="separator">Origin<span class="para-ref" id="origin"><a href="#origin"></a></span></h2>

<p>The idea for Tentuk came in January only as “hey plash, hey plash, how about a game where all the sound is human voice?”. I blame Kasamatsu Kouji, my vocal folds, and also my brain. I dropped the qualification that <em>all</em> audio must be voice-derived, because that'd take a lot of work that I don't want to spend on a “small” project (oh, who am I kidding&hellip;). The idea mingled a bit with ixili (Nahuatl for "to pierce"), a short-lived project I was co-opted to and spearheaded during the summer of 2013, which held Mesoamerican inspiration. Tentuk takes no immediate real-world cultural inspiration except some Middle Eastern clothing and architectural styles. I don't know how strongly that will come out in the end, and I expect a ton more to seep in that will make no sense.</p>

<p>My vocal experiments of late have leaned towards creatures &mdash; experiments I've wanted to play with and manipulate, but with my pre-occupation on Onsang, I haven't had the time. I should be able to manage a rich soundscape through that and my escapades in SunVox. This will be the first time I've used my voice for a project, and I hope to have voiced dialogue, but I won't commit to that unless I can manipulate my voice to convincingly sound like different people of any gender. I suspect this isn't possible, so I will likely apply spoken language only sparsely. It's possible I'll be able to get away with it through some mechanical means, like the characters of the world not having identifiable genders, and using non-human forms of speech&hellip; or something. I dunno, it's all very <em>theoretical</em> at this point.</p>

<p>I'm trying to avoid direct real-world appropriation, so the language(s) in the game will be constructed. I don't want to talk too much about the story until I've laid the blueprints, but the player character will initially not be able to understand the language of the first people they meet. Analytic players, on the other hand&hellip;</p>

<h2 class="separator">Week 1<span class="para-ref" id="week-1"><a href="#week-1"></a></span></h2>

<p>This first week (starting February 2), I explored technical possibilities and made some decisions on the game world. Immediately thereafter, I got swept up in Blender, exploring the feasibility of using it for all of the props and scene layouts. I think I'm firmly in that seat now, whether it turns out to be a detriment or not. The complete script-ability of Blender gives it a lot of potential, and I think I've made an <em>interesting</em> decision, nevertheless.</p>

<p>The majority of this time was spent coding the toolchain, working out the scene configuration, and figuring out how to get what I wanted with the projection. It took a lot of tweaking and prodding to get passable shadows and clean, pixel-perfect axonometric lines. I was undecided on the projection until today: front-facing with Y as depth. This makes the shadowing a little trickier, but makes simple model texturing and shading a lot easier. I have yet to white-box a test scene, so I'm still uncertain whether a slight horizontal rotation (10° or so) is desirable.</p>

<p>To get an idea of what the projection will look like and feel like mechanically, see <a href="http://en.wikipedia.org/wiki/Superbrothers:_Sword_%26_Sworcery_EP" target="_blank">Superbrothers: Sword &amp; Sworcery EP</a>. I guess this sort-of tagged along with ixili, which was straight-up copying the art style of S&amp;S. I don't want to do that with Tentuk, and I learned with ixili that pixel-accurate animation in 3D is really tricky. My initial desire is to use few colors and few shapes for the art style, as that will hopefully be within my poor artistic capacities. Pixel art is probably not a reasonable style for my desired timeline, and it will be easier on my psyche to go rough, even if I end up using a pixel art edge. Scene backdrops will be painted, with background props baked in. The majority of props should be fully capable 3D models so that they can be used in different orientations. It's more work individually, but it'll hopefully pay off through reuse.</p>

<p>As of writing, the toolchain has mocked-up backdrop baking and individual prop rendering, with separation of the backdrop shadow and prop-to-prop shadowing baked in with the prop (I could make better sense of this if I weren't so tired). I've not worked with any scene backdrops yet. That's on the agenda for next week, along with packing prop imagery and rendering a scene in-game. If all goes well, I will have a test scene up and running by the end of the week. If there is time, and I suspect there won't be, I'm going to start playing around with audio.</p>

<h2 class="separator">Timelapsing<span class="para-ref" id="timelapsing"><a href="#timelapsing"></a></span></h2>

<p>Starting next week, I will post a dev timelapse with the weekly journal. I had this idea only a few days ago, so there's barely any recorded data, which is why I'm holding off until next week. If I manage to finish the game in 7 weeks (the target deadline, ugh), the recorded data should run about 100,032 frames and weigh around 20GB (half of my initial estimate, woo!), projecting from 52.1 hours this week (yes, very scientific).</p>

<h2 class="separator">Scheduling<span class="para-ref" id="scheduling"><a href="#scheduling"></a></span></h2>

<p>It turns out game development is really hard, and really fun. Ever done a gamejam? Perhaps Ludum Dare? This week was like Ludum Dare for me, but a whole 5.3 days long. Just so you understand the gravity of that, I was awake for 37 hours <a href="/dev/ludum-dare-30-postmortem-onomo/" target="_blank">last time</a>. I developed a daily schedule during January, and it has proven very difficult to hold this week. I completely lose track of time and am detrimentally affected by deviation from the schedule &mdash; which is meant to keep my diet rigid, exercise consistent, and rhythm flowing.</p>

<p>It proved to be very beneficial during January, when I was working on Hord &amp; Onsang. I think it's because that work always felt like drudgery, even when it was interesting or challenging. I was always aware of time because my mind wasn't engaged or focused. It's so bizarre to see the shift in time perception while my efficiency seems unchanged. I'm still unsure if it's because I'm excited to be trekking new ground, or if it's because I've just been really slow. Maybe I'll have a better idea when I'm not so darn tired.</p>

	]]></content>
</entry>
<entry>
	<link href="http://allopoeia.komiga.com/self/retrospective/2014/" />
	<id>http://allopoeia.komiga.com/self/retrospective/2014/</id>

	<category term="self" label="Self"/>

	<title>Retrospective: 2014</title>

	<rights type="html"><![CDATA[&copy; 2015 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2015-01-04T22:42:00-0500</published>
	<updated>2015-01-29T22:01:00-0500</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<p>I have no words.</p>

<p>&hellip; Okay, I have <em>some</em> words.</p>

<p>First, an overview. My software repackaging contract finally ended on May 31, after 3 years and 5 months. I sacked <a href="https://github.com/komiga/murk" target="_blank">murk</a> and replaced it with <a href="https://github.com/komiga/Cacophony" target="_blank">Cacophony</a>. I significantly advanced the whole of <a href="https://github.com/komiga/Beard" target="_blank">Beard</a> (most notably, focus handling). I moved <a href="https://github.com/komiga/am" target="_blank">AM‽</a>'s linear operators out-of-class and restructured the hash interface. I went through two command schemes in <a href="https://github.com/komiga/hord" target="_blank">Hord</a>, developed an initial table storage model, and reworked the fundamental object structure. I broke Clang at least three times and found an error in libc++. I started <a href="https://github.com/komiga/togo" target="_blank">togo</a> on June 22. I playtested the Linux port of Antichamber and reported <a href="http://i.imgur.com/vqZq60K.jpg" target="_blank">two</a> <a href="http://i.imgur.com/IQjwJMr.jpg" target="_blank">bugs</a> in the Linux version of Among the Sleep.</p>

<p>I lived with my brother in Berkeley, California from August 2 to October 31 (90 days). While there, I made <a href="http://komiga.com/#onomo" target="_blank">Onomo</a> for Ludum Dare 30, had a battery fully discharge into my arm over 24 hours, attended GameDevDrinkUp in San Francisco (twice), attended QGCon, and failed to acquire employment. I observed that several factors, especially environment and social space, are dwarfed by discipline and motivation when it comes to <em>doing</em>. My discipline and motivation were largely not positively affected by the (little) improvement of these factors, and my continued lack of them was as ruinous as ever. There is undoubtedly a strength in harmony between environmental &amp; contextual factors and discipline &amp; motivation, and I've found that the positive presence of one side does not necessarily bring about the same to the other.</p>

<p>Back in Ohio, nothing of much note occurred beyond my attendance to the Texts and Contexts Conference in Columbus. Oh, and a <em>copious</em> display of privilege during the holidays. We are afforded too much.</p>

<p>That may <em>seem</em> like a lot, but it still doesn't <em>feel</em> like it, even when I write it all out. I was distraught between the high points at best, and rarely determined enough to do anything consistently.</p>

<p>As for the interests jotted out in my <a href="/self/retrospective/2013/" target="_blank">post for 2013</a>, none have been thoroughly advanced. I've done very little with SuperCollider, and I didn't learn any music theory. I forget the exact causes, but it's most likely from the lack of motivation and, in the latter case, because I had just begun developing togo.</p>

<p>I feel most of the year was wasted, despite having spent the largest amount of time on projects since 2011. My greatest difficulty is <em>applying</em> what I know about&hellip; well, everything. Design and execution, primarily. Premature optimization, eternal black holes of design, unbridled habits. I know these mechanics on a deep level, but I don't utilize the knowledge to prevent them. At least I now know (quantitatively <em>and</em> practically) where the wasteful hot spots are in the gamut of my behaviors.</p>

<p>My immediate goals for 2015 are: 1. eradicating waste, 2. improving discipline (especially as motivation has proven unreliable), and 3. developing a game. I will construct a weekly schedule and test variations as I push <a href="https://github.com/komiga/Onsang" target="_blank">Onsang</a> to the point of reasonable usability. By either that point or the end of January, I will allot time towards togo and a game.</p>

<p>With all of this in hand, the only deciding factor in my success is willpower. Given my abusive, hyper-exhaustive approach to design, the best motto for me is Just Do It™.</p>

<p>So I will.</p>

<h2 class="separator">Data<span class="para-ref" id="data"><a href="#data"></a></span></h2>

<p>I tracked a total of 8753.3 hours in 2014 with 16177 entries (1827 greater than in 2013). 6.7 hours were (probably) gobbled up by micro discontinuities and weird software. On a bright note, that's only half the time lost during 2013!</p>

<p>One speculative lesson in my 3 years, 9 months, and 28 days of time tracking is that the mere amount of time you sleep has no effect on productivity (provided it is at least healthy). Proper segmenting does, for sure, but there are tougher nuts to crack.</p>

<p>Here're some numbers:<sup><a href="#fn-fun-fact">1</a></sup></p>

<p><strong>Existence</strong> (selection of <span class="underline">~3797.1</span> hours):</p>

<ul>
	<li><p><span class="underline">2816.7</span> hours: sleeping. <strong>Segments</strong> (422, trimmed): mean: <span class="underline">6.60</span>, min: <span class="underline">1.67</span>, median: <span class="underline">6.91</span>, max: <span class="underline">12.48</span>. <strong>Monthly</strong>: mean: <span class="underline">234.72</span>, min: <span class="underline">209.30</span> (April, surprisingly), median: <span class="underline">235.25</span> (November, July), max: <span class="underline">278.20</span> (January). Compare to: <span class="underline">2831.9</span> (+15.2) in <strong>2013</strong> (mean: <span class="underline">235.99</span> (+1.27), min: <span class="underline">213.50</span> (+4.2, February), median: <span class="underline">236.75</span> (+1.5, July, September), max: <span class="underline">251.60</span> (&ndash;26.6, December)), and <span class="underline">2782.5</span> (&ndash;34.2) in <strong>2012</strong>.</p></li>
	<li><p><span class="underline">~395.6</span> hours: eating. <strong>Segments</strong>: primary: <span class="underline">265.9</span> (1: 136.4, 2: 108.0, 3: 21.5); auxiliary: <span class="underline">25.6</span> (1: 22.8, 2: 2.8); misc: <span class="underline">86.6</span> (munching (including unsegmented): 39.8, snack: 28.4, liquid: 18.4). Compare to: <span class="underline">~370.0</span> (&ndash;25.6) in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">204.8</span> hours: preparing food. Compare to: <span class="underline">253.6</span> (+48.8) in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">78.0</span> hours: cooking. Compare to: <span class="underline">19.1</span> (&ndash;58.9) in <strong>2013</strong>.</p></li>
</ul>

<p><strong>Study, projects, and work</strong> (<span class="underline">1354.6</span> hours):</p>

<ul>
	<li><p><span class="underline">1106.5</span> hours: projects (<span class="underline">~1287</span> public commits). <strong>Segments</strong>: programming: <span class="underline">1034.1</span> (tagged: 1045.0, inefficient: 65.8, severely inefficient: 20.1), design: <span class="underline">65.9</span> (inefficient: 3.0), and misc: <span class="underline">6.6</span>. Compare to: <span class="underline">876.6</span> (&ndash;229.9, <span class="underline">616</span> public commits) in <strong>2013</strong>, <span class="underline">823.1</span> (&ndash;283.4) in <strong>2012</strong>, and <span class="underline">~1149.5</span> (+43.0; mixed segments, inaccurate) in <strong>2011</strong>.</p></li>
	<li><p><span class="underline">343.5</span> hours: working (4m17d span). Compare to: <span class="underline">591.6</span> (+248.1) in <strong>2013</strong>, <span class="underline">239.4</span> (&ndash;104.1) in <strong>2012</strong>, and <span class="underline">140.9</span> (&ndash;202.6) in <strong>2011</strong>.</p></li>
	<li><p><span class="underline">81.8</span> hours: writing. Compare to: <span class="underline">~121.3</span> (+39.5) in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">74.2</span> hours: learning (non-directed, mostly media and filler). Compare to: <span class="underline">304.9</span> of coursework in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">21.9</span> hours: maintaining/building websites (inefficient: <span class="underline">2.9</span>).</p></li>
	<li><p><span class="underline">21.7</span> hours: playtesting/QA. Compare to: <span class="underline">48.4</span> (+26.7) in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">13.6</span> hours: drawing. Compare to: <span class="underline">~19.6</span> (+6.0) in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">12.8</span> hours: voice acting.</p></li>
	<li><p><span class="underline">8.8</span> hours: sound crafting. Compare to: <span class="underline">0.8</span> (&ndash;8.0) in <strong>2013</strong>.</p></li>
</ul>

<p><strong>Entertainment</strong> (<span class="underline">901.6</span> hours):</p>

<ul>
	<li><p><span class="underline">470.4</span> hours: watching media; anime: <span class="underline">257.9</span>, talks &amp; miscellaneous: <span class="underline">121.7</span>, western television: <span class="underline">41.4</span>, films: <span class="underline">29.4</span>, web series: <span class="underline">~20.0</span>. Compare anime/television to: <span class="underline">224.3/43.9</span> (&ndash;33.6/+2.5) in <strong>2013</strong>, and <span class="underline">255.8/40.0</span> (&ndash;2.1/&ndash;1.4) in <strong>2012</strong>.</p></li>
	<li><p><span class="underline">214.3</span> hours: gaming. Compare to: <span class="underline">189.1</span> (&ndash;25.2) in <strong>2013</strong> and <span class="underline">537.3</span> (+323.0) in <strong>2012</strong>.</p></li>
	<li><p><span class="underline">151.8</span> hours: reading. Categories: misc: <span class="underline">96.8</span>, books &amp; writings: <span class="underline">26.8</span>, comics: <span class="underline">16.1</span>, manga: <span class="underline">12.1</span>.</p></li>
	<li><p><span class="underline">65.1</span> hours: listening to podcasts. Compare to: <span class="underline">81.7</span> (+16.6) in <strong>2013</strong> and <span class="underline">~244.7</span> (+179.6) in <strong>2012</strong>.</p></li>
</ul>

<p><strong>Miscellaneous</strong>:</p>

<ul>
	<li><p><span class="underline">1078.0</span> hours: netloop. Tags: twitter: <span class="underline">643.4</span>, reddit: <span class="underline">378.0</span>, feedread: <span class="underline">11.9</span>. Compare to: <span class="underline">658.9/208.9/425.2/91.7</span> (&ndash;419.1/&ndash;434.5/+47.2/+79.8) in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">973.8</span> hours: bork (i.e., nothing in particular). Compare to: <span class="underline">1313.5</span> (+339.7) in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">918.8</span> hours: tagged IRC (overlap). Compare to: <span class="underline">941.4</span> (+22.6) in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">59.7</span> hours: in Windows, <span class="underline">50.5</span> of which were for gaming. This doesn't include work, which was almost entirely under Windows in 2014. Compare to: <span class="underline">143.4/102.3</span> (+83.7/+51.8) in <strong>2013</strong>.</p></li>
	<li><p><span class="underline">33015</span> scrobbles. Compare to: <span class="underline">36350</span> (+3335) in <strong>2013</strong>, <span class="underline">23534</span> (&ndash;9481) in <strong>2012</strong>, <span class="underline">25030</span> (&ndash;7985) in <strong>2011</strong>, and <span class="underline">31303</span> (&ndash;1712) in <strong>2010</strong>.</p></li>
	<li><p>Top five albums (8540, 25.86%): <strong>FEZ</strong> (3327, 10.07%), <strong>one</strong> (1758, 5.32%), <strong>Ghost in the Shell: ARISE</strong> (1653, 5.00%), <strong>Assassin's Creed: Revelations</strong> (912, 2.76%), and <strong>Tamako Market</strong> (890, 2.69%).</p></li>
	<li><p>Top five artists (10282, 31.14%): <strong>Disasterpeace</strong> (3375, 10.22%), <strong>Jesper Kyd</strong> (1836, 5.56%), <strong>C418</strong> (1781, 5.39%), <strong>Cornelius</strong> (1653, 5.00%), <strong>Balún</strong> (1637, 4.95%).</p></li>
</ul>

<p><strong>Buys</strong>:</p>

<ul>
	<li><p><strong>Games</strong>: <span class="underline">32</span>, only <span class="underline">15</span> of which I have played. Compare to: <span class="underline">35.5/16</span> (+3.5/+1) in <strong>2013</strong>.</p></li>

	<li><p><strong>Game bundles</strong>: <span class="underline">5</span>. Humble: Amnesia Fortnight 2014, Sid Meier, Indie #11, RPG Maker (weekly), Eye Candy (weekly). Compare to: <span class="underline">8</span> (+3) in <strong>2013</strong>.</p></li>

	<li><p><strong>Kickstarters backed</strong>: <span class="underline">5</span>. Categories: animation (1), art (1), comic (1), game (1), podcast (1). Compare to <span class="underline">17</span> (+12) in <strong>2013</strong>.</p></li>

	<li><p><strong>Music</strong>: <span class="underline">22</span> albums, 1 EP. Compare to: <span class="underline">5</span> albums (&ndash;17), 1 EP, and 1 single in <strong>2013</strong>.</p></li>

	<li><p><strong>Books</strong>: <span class="underline">0</span>. Compare to: <span class="underline">7</span> in <strong>2013</strong>.</p></li>

	<li><p><strong>Hardware</strong>: wired X360 controller, Sager NP8278-S laptop.</p></li>

	<li><p><strong>Lifewear</strong>: 5.11 Rush 24 backpack, SE Bikes Draft Lite bike.</p></li>

	<li><p><strong>Etc.</strong>: pulse oximeter, new model of digital thermometer, long socks, hair brush, hair ties.</p></li>
</ul>

<footer id="footnotes">
<h4 class="separator sep_footnotes">Notes<span class="para-ref"><a href="#footnotes"></a></span></h4>

<ol>
	<li id="fn-fun-fact">Fun fact: my dream for Onsang endows it with tracking and automatic statistics much deeper than herein. For example: scheduling, vital signs, nutrition, efficiency determinations by sleep and food intake, financing/budgeting, media, and on and on. I already spot-check pulse rate, temperature, S<sub>p</sub>O<sub>2</sub>, and weight; I track development by project, work by task, exercise, bio waste, media, and food intake down to the ingredient, volume, and methods of preparation &amp; cooking. Among other things. The details about these segments of time are syntactically coherent and governed by systems that mostly exist only within my head. All I need to do is move the structural and quantitative aspects out of my head and into software. Once Onsang is <em>fully operational</em>, I will have a wealth of supportive information at my fingertips, at a maintenance cost far below its current value.</li>
</ol>
</footer>


	]]></content>
</entry>
<entry>
	<link href="http://allopoeia.komiga.com/dev/ludum-dare-30-postmortem-onomo/" />
	<id>http://allopoeia.komiga.com/dev/ludum-dare-30-postmortem-onomo/</id>

	<category term="dev" label="Dev"/>

	<title>Ludum Dare 30 postmortem: Onomo</title>

	<rights type="html"><![CDATA[&copy; 2014 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2014-09-04T16:01:00-0700</published>
	<updated>2014-09-04T16:01:00-0700</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<a href="/media/2014-09-04-ld30/onomo-title-screen.png" target="_blank"><img src="/media/2014-09-04-ld30/onomo-title-screen.png" class="generic-center" width="100%" style="display: block;" alt="Onomo title screen which, in post LD sickness retrospect, is TOTALLY OFF CENTER AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaaaaaa" title="Onomo title screen which, in post LD sickness retrospect, is TOTALLY OFF CENTER AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaaaaaa" /></a>

<p>I made a&hellip; <em><a href="http://www.ludumdare.com/compo/ludum-dare-30/?action=preview&amp;uid=14542" target="_blank">thing</a></em> in 48 hours for Ludum Dare 30. This thing, named Onomo, resembles a game, but lacks a win state and any effective mechanics.</p>

<p>During development I recorded a <a href="https://youtu.be/xTSZ0Ae18Hg" target="_blank">time-lapse</a> that will hopefully be illustrative to the folk that want to see how jammers operate. There are certainly some hours missing as I forgot to start my script several times, but it's mostly all there.</p>

<p>Herein I go through the timeline of this jam from my perspective and talk about the development of Onomo.</p>


<h2 class="separator">Pre-jam<span class="para-ref" id="pre-jam"><a href="#pre-jam"></a></span></h2>

<p>I forgot Ludum Dare was happening this August and was only reminded of it by my brother before I flew to California, where I have now been living for a hair over a month.</p>

<p>My plan was to furnish <a href="https://github.com/komiga/togo" target="_blank">togo</a> with enough capability to be usable. This did not happen. I had a pre-existing deficit of willpower and inspiration that prevented progress. Despite this, I managed to fold 69.3 hours of staring into the engine over the two weeks before Ludum Dare, although productivity and system relevance only returned during the second week (considering time alone: 45.1 hours, 65% of the time spent working on the engine over those two weeks).</p>

<p>Realizing that was futile, I shifted to renovating my <a href="https://github.com/komiga/love-kernel" target="_blank">project kernel</a> for <a href="http://love2d.org" target="_blank">LÖVE</a> during the week of Ludum Dare. These 27.5 hours were spent on 71 commits:</p>

<ul>
	<li>Upgrading to LÖVE 0.9.1.</li>
	<li>Upending some weird structures and extending existing systems.</li>
	<li>Moving to a module and system structure that works with automatic reloading.</li>
	<li>Refactoring utilities and making them more consistent.</li>
	<li>Adding support for <a href="https://github.com/rxi/lurker" target="_blank">lurker</a> (which was indispensable) and <a href="https://github.com/rxi/lovebird" target="_blank">lovebird</a>.</li>
</ul>

<p>The previous (and first) time I used LÖVE (and my kernel) was during Ludum Dare 26, which resulted in <a href="http://komiga.com/#prisma" target="_blank">Prisma</a>. LÖVE already proved to be valuable and easy to distribute for the desktop trio of OSes. Automatic module reloading made it extremely powerful and eliminated iteration delay. I don't want to work without automatic code reloading now.</p>

<p>Even if togo were usable, I would've been in porting hell or never even bothered to port (which would've been bad for publicity and unfortunate for fellow Ludum Darians not yet initiated into the dark cult of Linux). This was apparent to me at the time, but I 'spose it just wasn't enough motivation to switch to the kernel immediately. The week before Ludum Dare would've been better spent intimating with my media tools.</p>

<p>LÖVE continues to be a good choice for game jams, and I suspect I will use it for many future jams until togo topples it.</p>


<h2 class="separator">Development<span class="para-ref" id="development"><a href="#development"></a></span></h2>

<p>I had inceptions for three themes during the final round: <strong>Connected Worlds</strong> (the highest voted among all previous rounds), <strong>Lost in Space</strong> (my personal favorite), and <strong>Isolation</strong>.</p>

<p><strong>Connected Worlds</strong> predictably won, and I ran to catch the 18:07 Millbrae-bound <a href="http://www.bart.gov/" target="_blank">BART</a> train. I worked out the platforming system and explored some mechanics in transit.</p>

<p>I met my brother in the city and we headed off to a meetup hosted by Apportable. There were few groups at the meetup, and we only stayed for 3 hours. In retrospect, as my motivation for visiting was primarily networking, it would've been better to stop by after the Compo had finished (the meetup included the Compo and the Jam, so there would've been 24 hours remaining once I completed my entry). Regardless, I don't work well on solo things around other people or in unfamiliar environments, so it was probably best that I didn't stay for any significant period of time <em>during</em> development.</p>

<p>Once we scuffled home through the crowded subways, I spent a decent while complaining that Lost in Space wasn't the theme. This involved making spacey whale-like sounds in SunVox, shifting through different degrees of slack-jawedness, and possibly some annoyed moaning. (I was <em>very</em> attached to my SPACE SEA idea.) I then (somewhat unintentionally) slept for 7.3 hours. This was the only time I slept throughout the Compo.</p>

<p>After waking, with truly stalwart discipline, I cast aside my attachment to Lost in Space and charged forward into the dark, ominous lands of Onomo.</p>

<p>The premise of Onomo came verbatim from the inception: two parallel universes (in representation), with otherworldly characters that the player can switch between. The characters were the first to be sketched, and the final top character is the closest to the original drawing; only the arms were removed. The original bottom character had four legs and was more like a mouth with appendages rather than a beetle-like thing (the final design).</p>

<p>Preliminary mechanics were very unoriginal: move objects around to effect change in the opposite world. The top character would've been slower and unable to jump, but could climb on top of things (butchered by removing its arms!). The bottom character could jump and move faster. I hadn't decided on using puzzles, but I had many ideas for mood. I thought the puzzles would turn out uninteresting, so I looked for ways to make the game interesting in an exploratory sense.</p>

<p><em>Hmm&hellip;</em> A lot of the changes to each world could be subtle instead of explicit, requiring the player to pay attention and connect non-trivial dots. This was more interesting to me, but I suspected most people would not have the patience. Considering both that Ludum Dare is a short-form game jam and my lack of artistic vigour, the anchor of aesthetic was possibly a misstep. Despite this, everything I did was valuable in that I was breaking new personal ground. It was the first time I built a platforming system, the first time I tried character animation, and the first time I crafted coherent music for a purpose.</p>

<p>I'm unsure when, but eventually I decided the characters would be able to swap positions. That definitely would've been useful for the platforming aspect (e.g., one part of a world would only be traversable by a certain character due to size), but I think I was still viewing that avenue as uninteresting. This feature didn't make it into the game, and it would've required some work on top of the existing monoliths to make the transition clean.</p>

<p>Without having decided what to really do about mechanics, I set about building the platforming system, world editor, and aesthetic. I wasn't granular with my time logging during the jam, so I've no exact numbers on how much time I spent on code vs. media, but the latter took surprisingly little, especially audio (judging by the time-lapse). I think I spent only a few hours in the final day creating the music, and a disproportionate amount of the time on art was spent unconstructively seeing what would happen with the tileset under certain blend modes. It felt like the monoliths (especially the large ones) took forever, but the time-lapse proves otherwise. (P.S. I used an actual script for the monoliths; they're probably legible enough for a linguistic adventurer to decipher.)</p>

<p>Speaking of monoliths,<sup><a href="#fn-monoliths">1</a></sup> they were a late final-day idea that initially had no purpose. I realized the lighting was going to be the driving force for the mood of Onomo, so I spent a lot of time toying with it. The monoliths came from wanting a lit world feature that would draw attention. Glowing glyphs were an obvious choice, and the idea to link them came even later in the day. It was fairly obvious at this point that I was not going to be able to fit in any concrete mechanics, so I just focused on making the world look consistent and slapped on (spoilers!) activation of linked monoliths by triggering their chimes together. That's the only thing you can do in Onomo.</p>

<p>Code-wise, I probably spent the most of my time tweaking the lighting and figuring out how to do character animation, character movement, and platforming (all of which I had never done in this form before). I included in-game world editing from the very beginning because I didn't want to have to convert or read data from a tile editor (which I hadn't scoped out beforehand). The in-game editor proved to be very useful and I think that they are generally a good idea. However, the save function was broken for far too long due to my ill-informed attempt to pre-optimize. I was attempting to avoid outputting rows that were empty, but I neglected that table length in Lua is zero if items are not continuous or have non-integer keys. The optimization was hardly even an optimization, and it wouldn't've mattered in the end since there were only a few rows of tiles in each world. Pre-optimization is the root of evil!</p>

<p>Another large mistake I made was not separating game controls from editor controls clearly enough. I changed the controls for the editor mode on the final day to absolve this issue, but I failed to adapt to them. This is probably the gravest misstep as the sudden change was the largest barrier to world building, which I had already been neglecting. Also, since the monoliths were a late idea, I was only able to place them in code. The biggest takeaway I have from this is that you should plot out the control schemes and don't tangle the two in code.</p>

<p>The name “Onomo” came about in the last few hours. Its origin or inspiration is utterly inexplicable. I spent the last 30 or so minutes building a Windows package and submitting the entry.</p>

<p>All told, I worked on Onomo for 34.7 hours.</p>


<h2 class="separator">Post-jam<span class="para-ref" id="post-jam"><a href="#post-jam"></a></span></h2>

<p>In the following hour or two after the Compo ended, I built and uploaded Linux and Mac packages. I also managed to play and rate a few entries before the 37 hour mark without sleep, which was curtailed by questions such as “how are you still awake?” and realizing that I was still awake.</p>

<p>After 11.5 delicious hours of sleep and some business in the city, I went on my usual spree of critical analysis, punctuated by asking for Linux-supporting entries on the Ludum Dare IRC channel. There were a few entries that simply blew me away (stay tuned).</p>

<p>Anyhow, I feel it's a bit disingenuous to be critical of others where evermore could be piled on my own work, so I will now offer a critical analysis of it. (I'm too honest for my own good.)</p>

<p>On the surface, there are a few issues of aesthetic and motion:</p>

<ol>
	<li>The characters feel like they are sliding in motion. A weak link between character velocity and animation.</li>

	<li>The worlds are too empty. There are large swaths where there is no non-uniform backdrop to give the player a sense of motion. This easily breaks immersion; an unfortunate misstep for something with aesthetic as its driving force.</li>

	<li>The world isn't detailed enough, and the majority of the world doesn't give feedback or feel alive. It's very static and unmoving. Even if the large swaths of emptiness were filled in, it wouldn't have any depth to it. I can only walk along a single plane in both worlds!</li>
</ol>

<p>As for the monoliths, the chimes mostly stand out, but at least two of them blend in too well to the background music. These chimes can be more easily heard during quieter sections of the music, but their corresponding monoliths should perhaps not have been placed so close to the spawn points. Giving the player a reason to stay (alas, this is a jam) in the game world for a longer period of time, to see what it has to offer, should've been more important.</p>

<p>The monolith activation mechanism is unclear and tedious. It practically requires the player to position both characters next to the linked monoliths and move one immediately after the other to ensure the second chime occurs while the first is playing (yes, this is exactly how it works). It would've been better and easier to understand if there was a continuous sound as the player stood in front of the monoliths. That way the player would not have to scramble between worlds and time the chimes.</p>

<p>Obviously this is a jam “game”, and I only worked on it over 48 hours, but these are all valid criticisms. I make these points for all of the entries I rate. My reason for doing so is to help developers improve their skills and hopefully observe things about their work that they may have never considered. Of course a large part of learning in game jams comes from the <em>process</em> of creation, but I think hearing different perspectives is also very important. If more Ludum Darians offered their thoughts, the experience would be all the better.</p>

<p>Onomo has become yet another concept I'd like to expand and explore, just as with my Ludum Dare 26 game, Prisma. I've been building togo not only to learn about data-oriented design and engine structure, but also to have a scaffolding on which I'd feel comfortable placing a proper Prisma (and now a proper Onomo). togo will remain my focus for a long while into the future, and I think Prisma will still be its primary motivator, though I envision other ideas will come along as it matures. No concept is perfect or inherently better than any other, so I'm not worried about this prospect. Every concept can be “better” than another with enough attention and development. When I feel that I can build something <em>complete</em>, I will also have a better picture of my abilities and what ideas are most compelling.</p>

<p>I suspect I will be writing about excellent Ludum Dare entries around the time the ratings are posted. Until then, go forth and critique, fellow Ludum Darians!</p>


<footer id="footnotes">
<h4 class="separator sep_footnotes">Notes<span class="para-ref"><a href="#footnotes"></a></span></h4>

<ol>
	<li id="fn-monoliths">It's more accurate to call them <a href="https://en.wikipedia.org/wiki/Runestone" target="_blank">runestones</a> (which, as happenstance, I had been exploring just before Ludum Dare), but I'll keep using monolith for consistency, even though I decided on the noun in a sleepless stupor.</li>
</ol>
</footer>


	]]></content>
</entry>
<entry>
	<link href="http://allopoeia.komiga.com/dev/data-oriented-design-for-games/" />
	<id>http://allopoeia.komiga.com/dev/data-oriented-design-for-games/</id>

	<category term="dev" label="Dev"/>

	<title>Data-oriented design for games</title>

	<rights type="html"><![CDATA[&copy; 2014 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2014-06-23T17:19:00-0400</published>
	<updated>2014-12-23T03:34:00-0500</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<p>Back in May 2011, I was leading the design of an RPG&hellip; as its only programmer. It was a failure. However! Programming for games is a lot of fun. I love systems, and game systems offer a lot of really neat problems. So I'm going to do it again &mdash; <em>without</em> an RPG involved.</p>

<p>I've been meaning to revisit the engine I wrote for that RPG, and now I have the time to do it. The code is horrific, though, so I'm practically starting over from scratch. It's better that way (no, <em>really</em>). I've also been planning to remake &amp; expand Prisma, so this fits in nicely. I can fuel design patterns by what is needed in Prisma.</p>

<p>Onsang is still going (and hey, it kinda looks like it's actually evolving), but it makes more sense to focus on game system knowledge right now as I'm planning on poking people through July-August in California for employment. I might end up pushing the QA side of things, so who knows what'll happen. Regardless, this is double-fun and good mental exercise.</p>

<p>Even since that scaffold of an RPG, I've been interested in building a rendering system that used command buffers, but not so much about the things that seem to implicitly come along with it (until recently). To achieve maximum speed in such a system, you want to minimize the amount of data you're throwing around, and you <strong>definitely</strong> don't want rampant allocations during a frame. This amounts to using compact data structures and contiguous arrays to minimize cache misses. This approach to systems is often called “data-oriented design” (DOD) or “data-driven design”, where the benefits are not just efficiency, but facilitating task distribution and modularity.</p>

<p>I'm going to take that to heart with the new engine. I've been reading articles of DOD proponents since last weekend, and the patterns make a lot of sense. <a target="_blank" href="http://www.bitsquid.se/">bitsquid</a>, for example, <a target="_blank" href="http://bitsquid.blogspot.com/2011/09/managing-decoupling-part-4-id-lookup.html">decouples</a> systems to encapsulate them and to allow them to manage their storage as optimally as possible. Their “low-level” systems expose IDs instead of pointers so the system is free to store &amp; re-organize its storage as it sees fit. By allowing the system to re-organize its memory, it can (e.g.) ensure its objects are sorted and adjacent, without affecting any IDs to those objects.</p>

<p>This means they can iterate through the objects without wasting CPU time or cache misses on empty slots or memory hopping through distant dynamically-allocated objects (the latter of which you are usually stuck with in something like <code>std::map</code>). For some systems, that might not be necessary, but you still get the benefit of not having dangling pointers, and you have a better guarantee that external systems aren't going to unduly modify the object (because they can't access it without asking for it). In most cases, you don't mutate resource data once it's loaded, so you really don't need mutable access, but if you do, it's O(1) away!</p>

<p>There are downsides, though. It takes some careful thinking to ensure the IDs are unique and cannot be used once the object dies (e.g., when an object is removed, and another added, the new one could have an internal index equal to the index of the removed object). It's not very difficult, and you can usually define a sane upper bound on the number of objects the system will ever possibly use (e.g., do you really need 4 billion sounds?), so you can use a bunch of bits of the ID just for the unique part (e.g., an incrementing counter that wraps around), and leave the rest to store the internal index. An upside to having an upper bound means you can reduce a ton of allocations, and you can form a better understanding of the resources required by a system through its use. I think such deep understanding is going to be extremely valuable.</p>

<p>I'm going to harp on a lot about bitsquid throughout this article, so be prepared.</p>

<p>Another aspect that emerges from DOD is simplicity. Because structures are open and don't prohibit or protect use, whatever wants to use them can do so in the most direct manner. In contrast to OOP, DOD necessitates that anything can do anything to everything that's open. In OOP, you're often hiding data and placing an interface on top to mediate access. Why? Because everything is afraid of being malformed or misused. This might make some sense for software that really, <em>really</em> shouldn't crash and should catch misuse as soon as possible through its design, but in games we just want to run fast and get the code over with. Always having to plaster on a layer of interface &amp; dumb-dumb security slows us down by making things rigid, so why do it? We're not interested in the preemptive assurances that get in our way and slow the game down.</p>

<p>Not having a protective interface over <em>everything</em> doesn't prevent us from crashing hard. We <em>should</em> crash hard when we encounter an error, and we should be vigilant to test for errors, because otherwise they're going to go unnoticed or ignored. It's better to fix the system early before everything depends on its broken behavior. This is, naturally, also <a target="_blank" href="http://bitsquid.blogspot.com/2012/01/sensible-error-handling-part-1.html">something bitsquid does</a>. Instead of removing that “pesky” triggering assertion that's due to malformed input, just fix the malformed input. Is the error too strict? Evaluate it and decide whether it should be removed or turned into a warning instead. For example, we may want to error when we encounter an animation that has a bajillion bones, but it <em>could</em> be totally legitimate, so a warning would be more sane until we have a real reason to prohibit it &mdash; e.g., an upper bound on the animation system's support for bones.</p>

<p>Back to decoupling. How do you share data if everything is disparate and in its own little universe? More data! Low-level systems can have an output stream of events or a way to poll per-frame (whatever makes more sense for the system). To connect low-level systems, you can use a higher-level system that knows about all of the systems involved. For example, the <code>Game</code> might want to connect HIDs to the <code>Player</code>, so it could poll the input system and send off to the player, the binding manager, whatever. By patching things together, we can design the interfaces to only deal with what they know, which reduces their complexity.</p>

<p>You might say that puts a lot of strain on the high-level system to connect things. True, but it's <em>much</em> better than distributing the interface to so many systems that you end up with an unmaintainable spaghetti of references, global objects, and code fluff. It moves the complexity away from the low-level systems and into the high-level systems where we can be more intelligent about the way they are connected. By connecting in a higher-level system, we reduce the complexity of the lower-level systems and increase their modularity. You can take any system out of the equation and replace it with another as long as it's not intrinsically attached to any other system.</p>

<p>What does this mean? We can replace systems at compile time (or even at runtime) to handle specific hardware for optimality, without resorting to expensive virtual calls on interfaces (which is too often only used to facilitate system swapping or so-called extensibility &mdash; booo). The internals could be implemented to avoid such nonsense (i.e., since we expose an event stream or polling, that's most of the interface, and it can differ internally), but still give it the modularity to support different hardware/capabilities efficiently. Most of the time, what you end up removing <em>due</em> to the removal of a system should only be in the high-level system. That will be a good indication that your systems are decoupled.</p>

<p>DOD obviously has a lot of implications for the code. Data is nearly always public, interfaces stay out of structures for POD traits (and really for uniformity when you want to extend the interface for dealing with a type), and abstract classes mostly disappear, but they are still valuable. For example, data streaming is already a costly operation, and we want to be able to use it on-demand from <em>different kinds</em> of storage media. We could hide this behind a little system that takes requests and gives back blobs, but it'd end up being global, since a lot of stuff is going to need data. We could keep it encapsulated and pass along streams from the high-level systems, but it's very roundabout, and adds more interface to our systems. In reality, you're going to have some resource system to fill up those systems, so the low-level storage media access should be disparate even from that. It doesn't fit into our system model. It's much easier to give it an abstract interface and allow different implementations of it for memory/file/whatever access and use it appropriately within the resource system.</p>

<p>Of course, you may only ever need standard filesystem access, so maybe you don't need the abstract interface. That's fine, but its consequences should be considered early on. What if you move to a server-client model (for tooling, the actual game, etc.)? You're probably going to want to stream over the network, or at least into memory <em>for</em> the network system, so your streams are going to then need direct memory support or support for a network buffer. What about platform support? You could handle that by using PIMPL, including different code, or by using a bunch of macros to determine the platform &amp; change the code accordingly, but then you end up with some manner of code spaghetti and have to either switch the type data or duplicate the whole interface for each platform.</p>

<p>If you foresee anything of that nature with something used in many places or heavily dependent on the platform (in this case, storage media access), you probably want a virtual interface. It separates the different implementations and makes the code simpler. You still have to duplicate the interface, but with an abstract class you have a <em>constraint</em> on what the interface is supposed to provide. This helps in maintainability when you change an interface. You don't have to guess whether a change has made it to all of the platform-specific implementations because <em>the compiler tells you</em>.</p>

<p>The core of my engine is going to be modeled around bitsquid's <a target="_blank" href="https://bitbucket.org/bitsquid/foundation">foundation library</a>. Having the interface separate from most types isn't very critical for something I'm authoring, since any extension to the interface I would make would be core and could thus be in-class if the interfaces were designed that way, but I'm going to do it anyways. Style shifts are fun!</p>

<p>It has other benefits, such as moving the recompilation factor to the <em>interface</em> and the code that includes it &mdash; away from the <em>type</em>, which rarely changes. These types have public data to facilitate the built-in functionality (since the interface consists of non-friend free functions), which happens to enable anyone else to add functionality. In addition to reducing recompilation from monolithic headers, code only includes what it uses and doesn't incur extra cost from the stuff that it doesn't need. This means types that <em>only</em> need a type definition (i.e., <em>none</em> of its interface) don't incur the cost of the interface.</p>

<p>Granted, you can design code to work like this without separating the interface from the class, but you still end up with inclusion spaghetti due to dependencies. <em>That's</em> what causes infectious recompilation, especially with class templates, which still costs more time due to the interface being needlessly included. You could move the interface <em>definitions</em> out of the class and still have the problem simply because the <em>declarations</em> are still a part of the class, and you then additionally have the maintenance cost of syncing the declaration and implementation files.</p>

<p>Like the foundation libray, my types are grouped together by &hellip; type. Core types, collection types, math types, etc. Interface headers (obviously) include the required type headers, so you only ever need to include the interface header for a type if you need to use functionality for it. If you need types, you have fewer headers to include since they're grouped. Because types rarely change, the recompilation factor of doing this is minimal. Interfaces change far more often, and it's less work to maintain &amp; include few headers (which, again, are small because there's no interface in the type headers).</p>

<p>A downside I've already noticed is the boilerplate caused with free functions for class templates. The template specification has to be repeated for each function. If I were doing this in my own style, that would be unnecessary because everything for a class template would be declared <em>and</em> defined in-class (which is undesired here for aforementioned reasons). It's not that bad, though. At least I don't have to repeat the <em>entire</em> declaration like you have to do with non-header implementations (or with separate declarations and definitions). It does have a nice side-effect for the objects the functions operate on: data member prefixes/suffixes are not needed because you always have to go through the object to get at its members, and thus there are no name confusions.</p>

<p>I'm again taking bitsquid's cue here by using a single prefix underscore for internal data members, just to indicate that something should only be mutated if you know what you're doing. My motto here is “the user should protect the user from the user”, but I'm still going to furiously flip tables via assertions if they misuse the existing interface. I'm still going to have (free function) accessors for these internal data members, because the data in a type <em>might</em> change (and thus have a significant effect on anything that directly accesses its members), because it's more consistent with accessor-like functions that make small calculations, and finally because writing <code>array._size</code> is kinda bleh. This is in contrast to my usual internal data members with <code>m_</code> as a prefix. Arguments of readability against something like that don't work on me (because I can read it just fine and “m_this m_is_hard m_to m_read” is never a real occurrence in code), but here I'm making an exception just to see how it goes. The rest of the design isn't really in my style either, so why not.</p>
 
<p>One thing I'm definitely <em>not</em> doing is repeating declarations just so the documentation is in a smaller area. Documentation is best represented outside of code, and editors these days can jump to functions if you really need to look at the code instead of the documentation (and why do you need to see just the documentation <em>in-code</em> if you already have documentation elsewhere?).</p>

<p>I'm very tempted to use the facilities from duct++ for the engine, but I really want to avoid using the stdlib if I can help it (which duct++ uses somewhat significantly). This is pedantic for someone that isn't doing “AAA” games where performance is critical because of all the stupid pixels, but I see it as a way to learn how all of this works. Making a game is the motivation to write the engine, but it has its own values and intrigue that will keep me plenty happy even if I don't get to actually making the game. I'm a system designer, which games have, but first and foremost <em>need</em> before they can be games, so I have plenty of fun in the backend.</p>

<p>I might end up using a few specific things from duct++, like compiler detection and endian handling, which don't include any (or little) of the stdlib.</p>

<p>Pedantic motivations justified, there are still good reasons to avoid the C++ stdlib. I can have a more intimate understanding of the algorithms and structures I'm using and can tailor them specifically to the needs of the engine. Everything in the engine can be consistent in style and (hopefully) behavior. I'm not forced to deal with the mental and (supposedly minor, now) performance cost of exceptions (which are unnecessary since I want to crash hard) and I have less platform-/implementation-specific junk to deal with (case in point: <a target="_blank" href="https://connect.microsoft.com/VisualStudio/feedback/details/890664/vs-14-ctp-cos-returns-bogus-results-in-64-bit-build">Microsoft broke <code>cos()</code></a>, granted <code>cos()</code> is not something I'm going to write).</p>

<p>I have yet to seriously dig into the rendering system design, but it's also going to be bitsquid-inspired. Ideally, rendering will be distributed into tasks, merged for sorting, then distributed again to the hardware. Sort keys are really neat, surprisingly simple, and I can't wait to play with them.</p>

<p>I need to stop expounding on this article and get back to the code. Hopefully I'll have something interesting to write about on this topic in the near future. Here's a list of what I've been reading:</p>

<ul>
	<li><a target="_blank" href="http://bitsquid.blogspot.com">bitsquid blog</a> <p>Very valuable information on how DOD is used in their engine, and a lot of real-world examples in design and methodology.</p></li>

	<li><a target="_blank" href="http://gamesfromwithin.com/data-oriented-design">Data-Oriented Design (Or Why You Might Be Shooting Yourself in The Foot With OOP)</a> <p>A very good article on the essentials, benefits, and drawbacks of DOD. “Where there’s one, there are many.”</p></li>

	<li><a target="_blank" href="http://c0de517e.blogspot.ca/2014/04/how-to-make-rendering-engine.html">How to make a rendering engine</a> <p>A collection of links for existing command-buffer rendering engines and an FAQ on the design of such rendering.</p></li>

	<li><a target="_blank" href="http://realtimecollisiondetection.net/blog/?p=86">Order your graphics draw calls around!</a> <p>Specifically about command buffers and sort keys.</p></li>

	<li><a target="_blank" href="http://www.altdev.co/2011/01/24/growing-ginkgo-pt-1-the-reading-list/">Growing Ginkgo Pt. 1: The Reading List</a> <p>A series on the design of the engine for Secrets of Rætikon (and Chasing Aurora?). This contains some useful links, but they use a typical OOP design, and a lot of virtual inheritance as far as I can see. See <a target="_blank" href="http://www.altdev.co/2011/02/23/ginkgos-game-loop/">Ginkgo's Game Loop</a> for time management in the main loop.</p></li>
</ul>

	]]></content>
</entry>
<entry>
	<link href="http://allopoeia.komiga.com/self/retrospective/2013/" />
	<id>http://allopoeia.komiga.com/self/retrospective/2013/</id>

	<category term="self" label="Self"/>

	<title>Retrospective: 2013</title>

	<rights type="html"><![CDATA[&copy; 2014 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2014-01-01T04:33:00-0500</published>
	<updated>2014-01-01T04:33:00-0500</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<p>What a disaster that was.</p>

<p>Let's see here.. overview first. I spent 31 days house-sitting and subsequently 71 living with my grandmother (from the end of March), the latter while suffering from a severe chronic headache and paired mental impairment. This obliterated focus, efficiency, and progress on <em>everything</em>.</p>

<p>After July, the headache got somewhat better (presumably due to diet and return to the homestead), but it took until late November to develop a functional theory: fructose malabsorption. Tweaking saccharide consumption resolved the issue (yet another slow downramp), although there were undoubtedly other factors (especially from my grandmother's house).</p>

<p>(And yes, I did visit a doctor in June. They had no theories. Nutrition tracking in Onsang is going to be glorious&hellip; <em>*drools*</em>.)</p>

<p>During the first month I was with my grandmother, I somehow managed to make <a href="http://www.ludumdare.com/compo/ludum-dare-26/?action=preview&amp;uid=14542">Prisma</a> for Ludum Dare 26. It's amazing this thing is even coherent.</p>

<p>For study, I planned on taking <a href="https://www.coursera.org/course/algs4partII"><em>Algorithms, Part II</em></a> (which started in April), but I didn't have the health nor time for it. I later took and "completed"<sup><a href="#fn-a4p2-completion">1</a></sup> the second run in November. I also took <a href="https://www.coursera.org/course/algs4partI"><em>Algorithms, Part I</em></a> again for good measure and crammed in <a href="https://www.coursera.org/course/calc1"><em>Calculus One</em></a>, <a href="https://www.coursera.org/course/maththink"><em>Introduction to Mathematical Thinking</em></a>, <a href="https://www.coursera.org/course/progfun"><em>Functional Programming Principles in Scala</em></a>, and <a href="https://www.coursera.org/course/automata"><em>Automata</em></a>. The last one seemed to be low-quality, so I didn't do any of the material. I also dropped the Scala course very early because I deemed it not worthwhile.</p>

<p>Yet the remaining workload was too taxing for the weekend, so I ended up dropping the rest of them (five or so weeks in), excepting the <em>Algorithms</em> courses. For <em>Part I</em>, I revisited material and revised code for assignments, so there wasn't much workload there (and I only intended to skim over it anyhow, since I had already completed the run back in March).</p>

<p>Once I was back home, work kept me busy &amp; interrupted. The headache and mental impairment made effort on projects inefficient and slow (even when at its lowest potency). Hopefully now that it's gone I can finally get some Serious Time rolling.</p>

<h2 class="separator">Goal review<span class="para-ref" id="goal-review"><a href="#goal-review"></a></span></h2>

<p>Earlier in the year I sketched out my goals for 2013. Most have not happened, and the rest that "have" are not complete.</p>

<ul>
	<li><p><strong>Static site generator</strong>. I haven't even touched the design since January. Jekyll has gotten somewhat better (speed-wise) and I <em>know</em> the way my sites are setup is disgusting (yes, that's Jekyll's fault), but I've forgotten precisely why, so I don't feel the urgent desire to replace it. I'd still like to roll my own at some point.</p></li>

	<li><p><strong>Log keeper rebuild</strong>. This is very much WIP, but I've got an initial API (<a href="https://github.com/komiga/hord">Hord</a>) working and theoretically-correct networking complete for the server/client (<a href="https://github.com/komiga/Onsang">Onsang</a>).</p>

	<p>So far I've created three libraries to assist the project: <a href="https://github.com/komiga/trait_wrangler">Trait Wrangler</a> (trait testing), <a href="https://github.com/komiga/ceformat">ceformat</a> (constexpr printf-like format parser and stdlib I/O library writer), and <a href="https://github.com/komiga/Beard">Beard</a> (terminal-based UI). I hope to have something up and running once Beard is usable &mdash; and I can't wait. I have wondrous, ridiculous, and 100% obsessive ideas for Onsang's use.</p></li>

	<li><p><strong>Android time tracker</strong>. I'm putting this one off until Onsang matures. I intend to move all of my time tracking into Hord nodes so that the various logs aren't disparate (as is currently the case).</p></li>

	<li><p><strong>ØMQ broker</strong>. I hoped to have a use for this in Onsang, but now I don't think I'll be using ØMQ, so it's on the back-burner until I find it interesting again.</p></li>

	<li><p><strong>Game engine</strong>. It needs a redesign.. which I haven't dug into. It'll probably happen once I'm done with my current contract work, since I'm still aiming to make Prisma into a Real Game™ (although that's reciprocal because I'm going to use Prisma as a guinea pig to flesh out the engine).</p></li>
</ul>

<h2 class="separator">2014 starter interests<span class="para-ref" id="2014-starter-interests"><a href="#2014-starter-interests"></a></span></h2>

<p>There are too many awesome things in our universe. Here are some of my interests coming into 2014.</p>

<p>I learned of <a href="http://supercollider.sourceforge.net">SuperCollider</a> just last week from Jeremy Zuckerman, and it's probably one of the coolest language-environments I've ever seen. This reignited my interest in audio, and I'm going to devote some time to learning SuperCollider for generative/responsive music creation and sound foley. I'm also tacking on some music theory.</p>

<p>On the visual side of things, I've been mulling over how to maximize visualization via imagination in a non-interactive medium. Books (and writing in general) are great because of the imagery and atmosphere you can conjure from them. I still vividly remember scenes from books like <em>Down and Out in the Magic Kingdom</em>, <em>One Thousand and One Nights</em>, and <em>Twenty Thousand Leagues Under the Sea</em> &mdash; far more vividly than I can remember any of the countless comic pages I've read.</p>

<p>It's not just a static representation, either. I can step through parts of the scene and see its angles and people and creatures. I find several reasons for this.</p>

<ol>
	<li><p>Books have longer spans of engagement, and the only tool at the reader's disposal is their imagination. Length of engagement certainly affects the retention of the imagined scenes and the play within it.</p></li>

	<li><p>On the flip size, the engagement in a comic is very low unless the reader is going through entire chapters in a single sitting. For web comics, the reader will spend a very small amount of time reading new pages (once they've gone through the backlog). Comics take all of the written imagery and turn it into literal imagery, but in doing so remove the reader's imagination from the equation. This is inherent, and the shorter length of engagement reduces even the retention of the speech.</p></li>

	<li><p>BRAINS.</p></li>
</ol>

<p>I enjoy reading and writing stories where the reader's imagination is only nudged part-way with descriptions and left to conjure the form and dynamics. To me, giving the reader a unique experience of the story is a lot more exciting than setting the imagery in stone with art. The annoyance is that I find it difficult to convey imagery in a succinct and natural manner with written English. I'd like something more expressive, but I can't think of a decent way to expand into existing media without losing the imaginative element.</p>

<p>Simply using cued audio <em>could</em> work, but I'd have to be really careful with timing and flow. As soon as the reader wants to read the previous page, the mood is generally upended. And the text gets chopped down into bits that can actuate an audio effect, meaning there's a lot of page turning and smaller chunks of text&hellip; meaning the reader is upending flow a lot more often. It gets ugly.</p>

<p>Actually, audio is really only complementary. The text still has to describe things. The audio will only ever be a layer plastered on to help with the nudging.</p>

<p>It's possible I'm just a poor writer (I am) and haven't yet found the secret formula. I imagine this desire will remain for years unless I either 1. figure out how to expand; or 2. improve my modus operandi to the point where it doesn't bother me. I should probably keep writing.</p>

<h2 class="separator">Data<span class="para-ref" id="data"><a href="#data"></a></span></h2>

<p>I tracked 8747.7 hours total in 2013 with 14350 entries. 12.3 hours are mysteriously missing.</p>

<p>Here're some numbers:</p>

<p><strong>Existence</strong> (selected ~3474.6 hours):</p>

<ul>
	<li><p>2831.9 hours: sleeping; monthly: mean 235.99, min. 213.50 (February, duh), median 236.75 (July, September), max. 251.60 (December). Compare to: 2782.5 in 2012.</p></li>
	<li><p>~370.0 hours: eating.</p></li>
	<li><p>272.7 hours: preparing food.</p></li>
</ul>

<p><strong>Study, projects, and work</strong> (~2121.6 hours):</p>

<ul>
	<li><p>876.6 hours: project programming (616 public commits), 966.0 total tagged as coding. Compare to (more efficient): 823.1 in 2012 and 1149.5 in 2011 (for which only 10 months were tracked!).</p></li>
	<li><p>591.6 hours: working, 59.5 of which were spent writing packaging documentation. Compare to: 239.4 in 2012 and 140.9 in 2011.</p></li>
	<li><p>304.9 hours: coursework (mostly programming) and study.</p></li>
	<li><p>178.8 hours: designing games.</p></li>
	<li><p>~121.3 hours: writing (non-work; probably overlaps a bit with game design).</p></li>
	<li><p>31.8 hours: playtesting.</p></li>
	<li><p>16.6 hours: video game quality assurance (related to above, but specifically: writing bug reports, investigating, and gathering data).</p></li>
</ul>

<p><strong>Entertainment</strong> (579.7 hours):</p>

<ul>
	<li><p>268.2 hours: watching anime (224.3, eep) and western television (basically The Legend of Korra × 2 and Avatar: The Last Airbender) (43.9). Compare to: 255.8/40.0 in 2012.</p></li>
	<li><p>189.1 hours: gaming. Compare to: 537.3 in 2012 (235.5 of Diablo 3 &mdash; eeeee).</p></li>
	<li><p>81.7 hours: listening to podcasts. Compare to: ~244.7 in 2012 (lot of backlog).</p></li>
	<li><p>21.4 hours: watching films.</p></li>
	<li><p>19.3 hours: reading comics and manga.</p></li>
</ul>

<p><strong>Miscellaneous</strong>:</p>

<ul>
	<li><p>941.4 hours: tagged IRC (span-wise; does not accurately represent time spent solely communicating in IRC).</p></li>
	<li><p>658.9 hours: netloop; 425.2 tagged reddit (&hellip; terrible!), 208.9 tagged twitter, 91.7 tagged feedread (RSS, blogs, comics and such).</p></li>
	<li><p>143.4 hours: in Windows, 102.3 of which were for gaming. This doesn't include work, which is 100% Windows for software packaging.</p></li>
	<li><p>36350 scrobbles (nearly no podcast scrobbles). Top three albums: FEZ, Tamako Market, and the Legend of Korra. Top three artists: Jesper Kyd, 野見祐二 (Yuuji Nomi), and Disasterpeace. Kyd and Yuuji are top artists because their share is distributed amongst multiple albums. If the albums were grouped, the top three would be: Assassin's Creed series, Nichijou, and FEZ.</p></li>
</ul>

<p><strong>Buys</strong>:</p>

<ul>
	<li><p><strong>Games</strong>: 35.5, only 16 of which I have played. The 0.5 is <a href="http://store.steampowered.com/app/239550">Age of Empires II HD: The Forgotten</a>, which is an expansion.</p></li>

	<li><p><strong>Game bundles</strong>: 8. Humble: Indie #7, Mojam #2, Android #7, Double Fine, Indie #8, Indie #9, and Daedalic (weekly). Indie Royale: Spring Sun.</p></li>

	<li><p><strong>Kickstarters backed</strong>: 17. Categories: animation (4), art (1), comic (4), game (5), music (2), podcast (1).</p></li>

	<li><p><strong>Music</strong>: 5 albums, 1 EP, and 1 single.</p></li>

	<li><p><strong>Books</strong>: 5 physical: <em>The Art of Computer Programming</em> (box set, counted by volume) and <em>The Design and Implementation of the 4.4 BSD Operating System</em>. 2 digital: <em>Records of the Grand Historian: Qin Dynasty</em> (aka <em>Shiji</em> &mdash; or parts of it, at least) and <em>Mapping and Visualization with SuperCollider</em>.</p></li>

	<li><p><strong>Hardware</strong>: CM QFR keyboard, AT-50M headphones, CO detector, Gigabyte GA-990FXA-UD3 mainboard, 16GB flash drive, Grifiti Fat Wrist Pad 14 (<strong>terrible</strong>), AT2035 LDC microphone, Focusrite Scarlett 2i4, On Stage MS7701 stand, miscellaneous others.</p></li>

	<li><p><strong>Etc.</strong>: glass beaker, replacement tea infuser (how dare you break that!), chair (finally), assorted teas (<a href="http://i.imgur.com/gWh6Hfr.jpg">the knolled survivors</a>), and a digital thermometer.</p></li>
</ul>

<footer id="footnotes">
<h4 class="separator sep_footnotes">Notes<span class="para-ref"><a href="#footnotes"></a></span></h4>

<ol>
	<li id="fn-a4p2-completion">I only really had time for the lectures and assignments. I found the exercises in <em>Part I</em> to be tedious and not worthwhile, so I wasn't even going to bother with them in <em>Part II</em>.</li>
</ol>
</footer>


	]]></content>
</entry>
<entry>
	<link href="http://allopoeia.komiga.com/game/prince-of-qin-a-flawed-wonder/" />
	<id>http://allopoeia.komiga.com/game/prince-of-qin-a-flawed-wonder/</id>

	<category term="game" label="Game"/>

	<title>Prince of Qin: a flawed wonder</title>

	<rights type="html"><![CDATA[&copy; 2013&mdash;2015 <a target="_blank" href="//komiga.com">Coranna Howard</a>, under license <a target="_blank" href="http://creativecommons.org/licenses/by-nc-sa/4.0/">Creative Commons BY-NC-SA 4.0</a>]]></rights>

	<published>2013-09-30T23:07:00-0400</published>
	<updated>2015-10-29T13:34:00-0400</updated>

	<author>
		<name>Coranna Howard</name>
		<uri>//komiga.com</uri>
	</author>

	<content type="html"><![CDATA[

<img src="/media/2013-09-30-poq/titlepiece.png" class="generic-center" style="display: block;" alt="Prince of Qin logo" title="Prince of Qin logo" />

<p>Despite its numerous flaws, <a target="_blank" href="https://en.wikipedia.org/wiki/Prince_of_Qin_(video_game)"><em>Prince of Qin</em></a> is one of few video games I hold in high regard. It's also a game that I am irrationally attached to. It won't leave me in peace. Or vice versa.</p>

<p>This article is sort-of documentation for the game and a chronicle of my time with it. I give a history and overview of <em>Prince of Qin</em> &amp; its related games, my experience with the game, and its possible futures in my care.</p>

<p>I supply Simplified Chinese for introductions, as well as pinyin and IPA where appropriate; if the pinyin is absent, its transliteration is roughly equivalent to the Chinese. If you want to learn more about the Qin Dynasty, the <a target="_blank" href="https://en.wikipedia.org/wiki/Records_of_the_Grand_Historian"><em>Shiji</em></a> (史記) covers it extensively. I cite specific passages from Burton Watson's translation <a target="_blank" href="http://www.amazon.com/Records-Grand-Historian-Dynasty-ebook/dp/B005DB3HSS"><em>Records of the Grand Historian: Qin Dynasty</em></a> (2013, 3rd edition) as SHIJI in the footnotes, although a fair majority of the storyline section is derived from it.</p>

<p>Fair warning: the next section is probably very boring. Skip past it if you're not interested in the time period in which <em>Prince of Qin</em> was released.</p>

<p>Alright, let's get at this tiger-fish!<sup><a href="#fn-did-you-hear-it">1</a></sup></p>


<h2 class="separator">History<span class="para-ref" id="history"><a href="#history"></a></span></h2>

<p>Object Software began development on <a target="_blank" href="https://zh.wikipedia.org/wiki/秦殇">《秦殇》</a> (<em>Qin War</em>; pinyin: Qín Shāng; IPA: /tɕʰin ʂɑŋ/) in 2000 and released in China during July 2002. They partnered with <a target="_blank" href="https://en.wikipedia.org/wiki/Strategy_First">Strategy First</a> to release in the United States market under the title <a target="_blank" href="https://en.wikipedia.org/wiki/Prince_of_Qin_(video_game)"><em>Prince of Qin</em></a> and brought a beta of the English version to E3 2002.</p>

<p>It was released to the US market in August 2002 with a full English dub. Reviewers criticized clunky mechanics, poor voice acting, and poor translation, but often praised the aesthetic, history-derivation, and music.<sup><a href="#fn-music">2</a></sup> These latter factors generally saved it from utterly dismal reviews. Western media often compared it to <a target="_blank" href="https://en.wikipedia.org/wiki/Diablo_II"><em>Diablo II</em></a> and <a target="_blank" href="https://en.wikipedia.org/wiki/Baldur's_Gate"><em>Baldur's Gate</em></a>.</p>

<p>Object Software also partnered with <a target="_blank" href="https://en.wikipedia.org/wiki/Capcom">Capcom</a> to release in the Japanese market under the title 「天覇光芒記　～プリンス・オブ・シン～」 (<em>difficult-to-translate Japanese-ey head-title &ndash; Prince of Qin</em>; romaji: Tenpakoubouki &ndash; Purinsu obu Shin). The release was pushed to August 2003 due to the localization team's pre-occupation with <a target="_blank" href="https://en.wikipedia.org/wiki/Blizzard_Entertainment">Blizzard Entertainment</a>'s <a target="_blank" href="https://en.wikipedia.org/wiki/Warcraft_III:_Reign_of_Chaos"><em>Warcraft III</em></a> and, unlike Strategy First, Capcom did not dub their release.</p>

<p>Online multiplayer began in China and the US shortly after release with a capacity of 500 players. The online service was called “Battle.Net” despite not having any relation whatsoever to Blizzard's <a target="_blank" href="https://en.wikipedia.org/wiki/Battle.net">online gaming service</a>.</p>

<p>Also after the Chinese and US releases, Object Software shifted to developing online-only games and made public an online-only standalone “expansion” called <em>Prince of Qin Online - The Overlord of Conquerors</em> (later called <em>World of Qin</em>) near the end of 2002. This shift was likely due to Blizzard's <a target="_blank" href="https://en.wikipedia.org/wiki/World_of_Warcraft"><em>World of Warcraft</em></a> announcement at E3 and the surrounding hype over massively-multiplayer online gaming.</p>

<p>In January 2004, Strategy First partnered with GMX Media to release in the United Kingdom market. Official English multiplayer servers died down through the year as patches reduced server stability and broke some fundamental mechanics.</p>

<p>In the same month, Object Software released its final (to date) singleplayer game: 《复活》 (<em>Resurrection</em>; pinyin: Fùhuó; IPA: /fuxu̯ɔ/), a more mythologically-derived “prequel” to <em>Prince of Qin</em>. GMX Media published the game in the UK in December with a full English dub under the title <em>Seal of Evil</em>. Strategy First later published the game in the US market in April 2006.</p>

<p><em>Seal of Evil</em> illustrates some experiments they would later incorporate into <em>World of Qin 2</em>, which utilized realtime 3D for actors. Object Software later grew into first-person 3D MMOs and hasn't looked back since.<sup><a href="#fn-dou-shen">3</a></sup></p>


<h2 class="separator">Storyline<span class="para-ref" id="storyline"><a href="#storyline"></a></span></h2>

<p><em>Prince of Qin</em> features a history-derived story set in the <a target="_blank" href="https://en.wikipedia.org/wiki/Qin_Dynasty">Qin Dynasty</a> (221&ndash;206 BCE) surrounding <a target="_blank" href="https://en.wikipedia.org/wiki/Fusu">Fusu</a> (扶苏), heir apparent of the <a target="_blank" href="https://en.wikipedia.org/wiki/Qin_Shi_Huang">First Emperor</a> (秦始皇帝; pinyin: Qín Shǐ Huángdì), after the First Emperor's death.<sup><a href="#fn-death-of-first-emperor">4</a></sup> What follows is an overview of the period and the events surrounding the story in real-world history.</p>

<p>Near the end of the <a target="_blank" href="https://en.wikipedia.org/wiki/Warring_States_period">Warring States period</a>, the Qin state <a target="_blank" href="https://en.wikipedia.org/wiki/Qin%27s_wars_of_unification">conquered and unified</a> the six major states. The king of the Qin state, Zhao Zheng (趙正), became the First Emperor of this unified China.</p>

<p>The Qin Dynasty standardized the units of measurement and currency, formed extensive trade routes, and unified the Chinese script. The First Emperor undertook massive projects, such as the Great Wall of China and his tomb, which is famous for its collection of life-sized <a target="_blank" href="https://en.wikipedia.org/wiki/Terracotta_Army">terracotta warriors and horses</a>.</p>

<p>However, the First Emperor used cruel law to control and subdue the people, and most of his tomb's workers were killed to ensure secrecy (by some counts, 300,000&ndash;720,000 people). He ordered <a target="_blank" href="https://en.wikipedia.org/wiki/Burning_of_books_and_burying_of_scholars#Book_burning">the mass burning of books</a> to suppress scholars (who were accused of raising dissent) and later <a target="_blank" href="https://en.wikipedia.org/wiki/Burning_of_books_and_burying_of_scholars#Burial_of_the_scholars">buried alive</a> more than 460 scholars<sup><a href="#fn-scholar-count">5</a></sup> after being deceived by two alchemists in his search for immortality, actions that drew criticism from his eldest son, Fusu.</p>

<p>Due to his numerous remonstrances, Fusu was exiled (ca. 212 BCE) to the north to supervise General <a target="_blank" href="https://en.wikipedia.org/wiki/Meng_Tian">Meng Tian</a> (蒙恬), who was in charge of the construction of part of the Great Wall (as it was <em>later</em> known). In the subsequent years, Fusu was very successful in protecting the northern border against the Huns and was universally liked among the troops.</p>

<p>In 210 BCE, the First Emperor died on a trip to the far east of the empire in search of an elixir of immortality. As the First Emperor insisted on touring in secrecy, only prime minister <a target="_blank" href="https://en.wikipedia.org/wiki/Li_Si">Li Si</a> (李斯), advisor <a target="_blank" href="https://en.wikipedia.org/wiki/Zhao_Gao">Zhao Gao</a> (趙高), son <a target="_blank" href="https://en.wikipedia.org/wiki/Qin_Er_Shi">Huhai</a> (胡亥) (who was the only member of the royal family traveling with them), and five or six trusted eunuchs knew of his death. Li Si feared news of the emperor's death would trigger an uprising, so he concealed his coffin and returned with the convoy to the capital, Xianyang, all the while concealing the emperor's rapidly decomposing body (due to the summer heat) by ordering carts full of rotten fish be carried behind and ahead of the emperor's wagon.</p>

<p>After two months journey back to the capital, Zhao Gao conspired with Huhai (while only convincing Li Si to play along) to forge an edict claiming various crimes committed by Fusu and Meng Tian and ordering them to commit suicide. <a target="_blank" href="https://en.wikipedia.org/wiki/Meng_Yi">Meng Yi</a> (蒙毅), Meng Tian's younger brother, sentenced Zhao to death for a crime he committed as a minor official, but the First Emperor pardoned him. Because of this, Zhao held a grudge against the Meng family. He was also afraid Meng Tian's prowess and closeness to Fusu would threaten his position if Fusu ascended the throne.</p>

<p>When the messenger arrived with the edict, Fusu retired to weeping in his inner quarters, intending to commit suicide. Meng Tian stopped him from doing so, saying:</p>

<blockquote><p>His Majesty has been residing away from the capital and has not yet designated an heir apparent.<sup><a href="#fn-heir-apparent">6</a></sup> He has put me in command of 300,000 men to guard the border and ordered you to act as supervisor. Such assignments are among the most crucial in the whole empire. Now one messenger appears and immediately you prepare to commit suicide. How do you know that this is not some sort of deception? I urge you to ask for confirmation. If the order is confirmed and you then take your life, no one can say you acted tardily.<sup><a href="#fn-shiji-p190">7</a></sup></p></blockquote>

<p>Being too loyal<sup><a href="#fn-fusu-reasons">8</a></sup> for his own good, Fusu responded with “If a father instructs his son to commit suicide, how can he ask for confirmation of the order?”<sup><a href="#fn-shiji-p191">9</a></sup> and proceeded to take his life. Meng Tian, however, was unwilling to commit suicide. The messenger turned him over to the officials, who imprisoned him at Yangzhou.</p>

<p>After the messenger returned, Huhai ascended the throne (210 BCE), taking the title of Second Emperor (秦二世; pinyin: Qín Èr Shì), with Zhao Gao as the chief of palace attendants constantly by his side in the inner palace to tend to affairs of state. Zhao spoke ill of the Meng family “day and night” to Huhai. In the same year, Meng Yi was put to death, Meng Tian was forced to commit suicide by poison, and the remaining Meng family was killed.</p>

<p>Zhao exploited Huhai's view of him as a teacher and superior to impose his own agenda, out-running the First Emperor's cruelty, having Li Si executed,<sup><a href="#fn-li-si-execution">10</a></sup> and eventually cornering Huhai himself into suicide through a rather rash move in 207 BCE. After Huhai's death, Zhao tried to install <a target="_blank" href="https://en.wikipedia.org/wiki/Ziying">Ziying</a> (子嬰), one of Huhai's uncles,<sup><a href="#fn-ziying-heredity">11</a></sup> as the next emperor.</p>

<p>However, Ziying (of royal blood), suspected Zhao was going to have him killed to appease the rebels, so he feigned illness and declined to attend state affairs. He plotted with the eunuch Han Tan (韓談)<sup><a href="#fn-shiji-p205">12</a></sup> to kill Zhao. Zhao eventually came in person to his quarters to inquire about his illness and was killed by Han Tan as he arrived. Ziying then ascended the throne as the King of Qin<sup><a href="#fn-ziying-king">13</a></sup> and executed Zhao Gao's three sets of relatives. He reigned for a short 46 days before surrendering (along with the entire royal family) to a Chu (later Han) rebel leader, <a target="_blank" href="https://en.wikipedia.org/wiki/Emperor_Gaozu_of_Han">Liu Bang</a> (刘邦),<sup><a href="#fn-race-to-guanzhong">14</a></sup> in late 207 BCE.</p>

<p>Liu Bang handed him over to another Chu rebel leader, <a target="_blank" href="https://en.wikipedia.org/wiki/Xiang_Yu">Xiang Yu</a> (项羽), who killed Ziying and the entire royal family. This effectively ended the Qin Dynasty after only 15 years of existence. Liu and Xiang fought over the coming years in the interregnum known as the <a target="_blank" href="https://en.wikipedia.org/wiki/Chu%E2%80%93Han_Contention">Chu&ndash;Han Contention</a>, with Liu eventually defeating Xiang at the <a target="_blank" href="https://en.wikipedia.org/wiki/Battle_of_Gaixia">Battle of Gaixa</a> in 202 BCE. Liu then established the admired <a target="_blank" href="https://en.wikipedia.org/wiki/Han_Dynasty">Han Dynasty</a> (206 BCE&ndash;220 CE), becoming Emperor Gao (高皇帝; pinyin: Gāo Huángdì).</p>

<p>At least, that's how it goes in history.</p>

<p><em>Prince of Qin</em> explores what could have happened if Fusu heeded Meng Tian's logic &mdash; or if he was at least as suspicious. The story up to the false edict is the same as real-world history. Fusu is stopped by Meng Tian and flees as Meng Tian and his men hold off the soldiers. A manhunt ensues for Fusu, who has embarked on a journey to Xianyang to discover the truth.</p>

<p>The 11-chapter narrative branches with seven total endings and explores the Qin state. Many of the NPCs encountered in the game are based on their real-world characteristics and known history. Zhao Gao is the main antagonist throughout the game, although there are many obstacles in Fusu's path.</p>

<p><em>Seal of Evil</em>, the so-called “prequel”, takes place in the Warring States period surrounding the <a target="_blank" href="https://en.wikipedia.org/wiki/Baiyue">Baiyue</a> peoples as the Qin state was rapidly conquering the surrounding area. It largely stands alone and incorporates more Chinese mythology than <em>Prince of Qin</em> does. I have plenty of criticisms about it, but I will not share them presently.</p>


<h2 class="separator">Mechanics and gameplay<span class="para-ref" id="mechanics-and-gameplay"><a href="#mechanics-and-gameplay"></a></span></h2>

<p><em>Prince of Qin</em> is a mixture of ARPG and traditional CRPG (with emphasis on the latter, I will argue) with realtime combat (i.e., not turn-based), partially-interactive pausing, and on-demand game saving. In singleplayer mode, the player can recruit and control up to five characters with permadeath (except that when Fusu dies, it's game over).</p>

<p>The first two sub-sections are somewhat detail-heavy to serve as a reference of sorts to fundamentals and build theory, but cover some of the core mechanics and show the classes in action. Most specific values are relative to patch 1.30. I planned on including a gameplay video (as all that I've seen are quite crude), but the forces of evil<sup><a href="#fn-forces-of-evil">15</a></sup> were having none of that AV synchronization business. Fortunately, there're plenty of screenshots.</p>

<h3 class="separator">The Five Elements<span class="para-ref" id="mechanics-five-elements"><a href="#mechanics-five-elements"></a></span></h3>

<p>The Five Elements, based on a <a target="_blank" href="https://en.wikipedia.org/wiki/Wu_Xing">real-world concept</a>, are a fundamental mechanic. The elements and their corresponding attack power (<strong>AP</strong>) and defense power (<strong>DP</strong>) abbreviations are:</p>

<ul>
	<li>Metal (<strong>MAP</strong>, <strong>MDP</strong>)</li>
	<li>Water (<strong>WAP</strong>, <strong>WDP</strong>)</li>
	<li>Wood (<strong>NAP</strong>, <strong>NDP</strong>)</li>
	<li>Fire (<strong>FAP</strong>, <strong>FDP</strong>)</li>
	<li>Earth (<strong>EAP</strong>, <strong>EDP</strong>)</li>
</ul>

<p>I abbreviate elemental AP and DP as <strong>XAP</strong> and <strong>XDP</strong>, respectively (i.e., when referring to elemental AP and DP in an abstract or encompassing sense). There is also so-called “common” attack power (<strong>CAP</strong>) and common defense power (<strong>CDP</strong>), which act outside of the elemental system (i.e., they are neither strong nor weak against XDP and XAP).<sup><a href="#fn-damned-brutes">16</a></sup> Two mechanics control the relationships between these elements.</p>

<img src="/media/2013-09-30-poq/elemental-promotion.png" class="generic-center" style="display: block;" alt="Elemental promotion" title="Illustration of elemental promotion. Starting from the topmost in clockwise order: Metal (gold), Water (blue), Wood (green), Fire (orangered), Earth (brown)." />

<p><strong>Promotion</strong> is a mechanic used to activate “hidden” attributes on items. As seen in the illustration above, the promotion loop is (clockwise, starting from the top): Metal &rarr; Water &rarr; Wood &rarr; Fire &rarr; Earth &rarr; Metal &rarr; <span style="top: -5px; position: relative;">&hellip;</span>. To activate hidden attributes on an equipment item, a specific equipment item type of the promoting element must be worn (e.g., belts promote chest pieces and rings promote weapons &amp; shields).</p>

<img src="/media/2013-09-30-poq/elemental-restriction.png" class="generic-center" style="display: block;" alt="Elemental restriction" title="Illustration of elemental restriction" />

<p><strong>Restriction</strong> is a mechanic controlling the strength and weakness of elements against other elements. As seen in the illustration above, the restriction loop is: Metal &rarr; Wood &rarr; Earth &rarr; Water &rarr; Fire &rarr; Metal &rarr; <span style="top: -5px; position: relative;">&hellip;</span>. Somewhat defying logic, Fire does not restrict Wood. You'll just have to deal with that.</p>

<p>In addition to promotion and restriction, the elements have an offensive chance to inflict short effects:</p>

<ul>
	<li>Metal causes stun, which immobilizes the target for a short duration.</li>
	<li>Water causes freezing, which immobilizes the target for a short duration.</li>
	<li>Wood causes poison, which deals damage to the target over time.</li>
	<li>Fire causes blindness, which decreases the target's line of sight, Dodge Rate, and Shoot Rate.</li>
	<li>Earth causes stoning (or “terra-cotta”), which immobilizes the target for a duration.</li>
</ul>

<h3 class="separator">Basics and classes<span class="para-ref" id="mechanics-basics"><a href="#mechanics-basics"></a></span></h3>

<p>Leveling gives the player 10 points to spend on six different attributes and 1 skill point to spend on skills, with skill tiers unlocking periodically up to five tiers. The six directly modifiable attributes are:</p>

<ul>
	<li>Strength (<strong>Str</strong>):
	<p>Increases CAP and maximum weight capacity. Stock and trade for purely offensive variants.</p></li>

	<li>Constitution (<strong>Con</strong>):
	<p>Increases CDP and HP regeneration. Tank attribute.</p></li>

	<li>Dexterity (<strong>Dex</strong>):
	<p>Increases Dodge Rate (<strong>DR</strong>) and Shoot Rate (<strong>SR</strong>) (accuracy). Generally required for all non-casters.</p></li>

	<li>Savvy (<strong>Sav</strong>):
	<p>Increases rate of experience gain. I am not aware of a sane use for this attribute outside of multiplayer.</p></li>

	<li>Charm (<strong>Cha</strong>):
	<p>Increases value of own items and decreases cost of store items. This has some uses in singleplayer.</p></li>

	<li>Wisdom (<strong>Wis</strong>):
	<p>Increases MP restoration speed and XAP. Stock and trade for casters and element-driven characters.</p></li>
</ul>

<p>Health and mana have the typical abbreviations: <strong>HP</strong> and <strong>MP</strong>.</p>

<p>Most skills can reach a maximum level of 9, with others limited to 3&ndash;6. Certain tiers of a specific skill are only unlocked once the character reaches the level of the tier. Characters can reach a maximum level of 99, although this takes an obscene amount of time &ndash; even with decent Savvy &ndash; and will never be reached by any sane person before they complete the singleplayer storyline.<sup><a href="#fn-maximum-level">17</a></sup></p>

<p>There are five classes in the game:</p>

<ul>
	<li>Paladin (male, melee &amp; ranged)</li>
	<li>Muscleman (male, melee)</li>
	<li>Assassin (female, melee &amp; ranged)</li>
	<li>Wizard (male, caster)</li>
	<li>Witch (female, caster)</li>
</ul>

<p>Each class has three variants with different traits. All effects of a trait are amplified with the character's level. Variants with an elemental trait increase XAP of the element and XDP of the element it restricts, but decrease XDP of its restrictor. For example, for every level an Earth-traited character gains, their EAP and WDP increase, but their NDP decreases. XAP gain varies with the variant, but XDP increases and decreases by 10.</p>

<h4 class="separator">Paladin<span class="para-ref" id="class-paladin"><a href="#class-paladin"></a></span></h4>

<p>The Paladin uses swords, shields, dagger-axes (like a sword attached to an axe handle), and bows. Because the skillset is geared towards swords, bows are not very useful and tend to be a waste of time (especially in singleplayer, where Fusu generally needs to be the strongest character).<sup><a href="#fn-paladin-bows">18</a></sup> The skillset includes an EAP buff and its forging skill (covered shortly) allows the Paladin to craft items instead of paying gold to a blacksmith. Base attributes are: 30 Str, 30 Con, 25 Dex, 30 Sav, 40 Cha, 25 Wis. Variants:</p>

<ul>
	<li>Defense [144+33 HP, 140+4 MP, +5 CDP, +5 XDP (all)]:
	<p>Gains XDP, CDP, and extra HP. Should focus on Str and Dex or Str, Con, and Dex. With good block rate and defense skill utilization, this variant makes a good tank.</p></li>

	<li>Offense [120+28 HP, 140+4 MP, +0.8/1.6 CAP]:
	<p>Gains CAP. Often used for PvP; should focus on Str and Dex.</p></li>

	<li>Earth [120+28 HP, 140+4 MP, +0.8/1.6 EAP, +10 WDP, -10 NDP]:
	<p>Earth-traited. Rarely used in multiplayer due to dangerous Wood (and thus poison) weakness. Should focus mostly on Wis.</p></li>
</ul>

<p>Fusu is a Paladin of the first variant, which also happens to be the most over-powered class variant in the game.</p>

<div id="ss-class-paladin-screenshots" style="text-align: center;">
<a target="_blank" href="http://i.imgur.com/LgmE9Nh.png"><img src="/media/2013-09-30-poq/class/paladin-dragon-prance-thumb.png" alt="paladin-dragon-prance" title="Paladin using ‘Dragon prance’" /></a>

<a target="_blank" href="http://i.imgur.com/puj8qWs.png"><img src="/media/2013-09-30-poq/class/paladin-heart-piercing-1-thumb.png" alt="paladin-heart-piercing-1" title="Paladin using ‘Heart-piercing’" /></a>

<a target="_blank" href="http://i.imgur.com/4U65uHo.png"><img src="/media/2013-09-30-poq/class/paladin-heart-piercing-2-thumb.png" alt="paladin-heart-piercing-2" title="Paladin preparing for take-off" /></a>

<a target="_blank" href="http://i.imgur.com/PlrUrfA.png"><img src="/media/2013-09-30-poq/class/paladin-sweeping-all-thumb.png" alt="paladin-sweeping-all" title="Paladin using ‘Sweeping all’" /></a>
</div>
<hr class="separator-inner">

<h4 class="separator">Muscleman<span class="para-ref" id="class-muscleman"><a href="#class-muscleman"></a></span></h4>

<p>The Muscleman is an offensive, sluggish brute employing the use of polearms, clubs, axes, and maces. The skillset includes MAP &amp; FAP buffs, beast summoning, and some crowd-control. Base attributes are: 40 Str, 35 Con, 20 Dex, 30 Sav, 30 Cha, 15 Wis. Variants:</p>

<ul>
	<li>Endurance [150+38 HP, 240+6 MP]:
	<p>Gains extra MP.<sup><a href="#fn-mm-endurance-intended-traits">19</a></sup> This variant is effectively useless.</p></li>

	<li>Metal [150+38 HP, 120+3 MP, +0.6/1.2 CAP, +0.6/1.2 MAP, +10 NDP, -10 FDP]:
	<p>Metal-traited, but also gains CAP. Should focus on Str, Dex, and Wis or just Str and Dex. Plenty of shock skills available.</p></li>

	<li>Fire [150+38 HP, 120+3 MP, +0.6/1.2 CAP, +0.6/1.2 FAP, +10 MDP, -10 WDP]:
	<p>Fire-traited, but also gains CAP. Should focus on Str, Dex, and Wis or just Str and Dex.</p></li>
</ul>

<div id="ss-class-muscleman-screenshots" style="text-align: center;">
<a target="_blank" href="http://i.imgur.com/kvUt5VX.png"><img src="/media/2013-09-30-poq/class/muscleman-bearfriend-thumb.png" alt="muscleman-bearfriend" title="Muscleman and bearfriend" /></a>

<a target="_blank" href="http://i.imgur.com/M0ygqxz.png"><img src="/media/2013-09-30-poq/class/muscleman-embiggen-thumb.png" alt="muscleman-embiggen" title="Muscleman roaring" /></a>

<a target="_blank" href="http://i.imgur.com/4Tfy7iv.png"><img src="/media/2013-09-30-poq/class/muscleman-landing-thumb.png" alt="muscleman-landing" title="Muscleman angry" /></a>

<a target="_blank" href="http://i.imgur.com/IKegtE4.png"><img src="/media/2013-09-30-poq/class/muscleman-jumping-thumb.png" alt="muscleman-jumping" title="Muscleman inbound" /></a>
</div>
<hr class="separator-inner">

<h4 class="separator">Assassin<span class="para-ref" id="class-assassin"><a href="#class-assassin"></a></span></h4>

<p>The Assassin is an offensive trap-laying, stealth-employing dagger, bow, and crossbow wielder who can attack very fast with all weapons except for the crossbow (outside of rapid-fire skills). The skillset includes WAP &amp; NAP buffs, is almost equally divided between daggers &amp; bows, and can be critical in singleplayer due to trap detection and disarm skills. Base attributes are: 25 Str, 25 Con, 35 Dex, 40 Sav, 35 Cha. Variants:</p>

<ul>
	<li>Offense [126+29 HP, 130+4 MP, +0.8/1.6 CAP]:
	<p>Gains CAP and extra HP. Should focus on Str and Dex.</p></li>

	<li>Water [105+24 HP, 130+4 MP, +16 SR, +0.6/1.2 WAP, +10 FDP, -10 EDP]:
	<p>Water-traited; gains SR. Should focus on Dex and Wis.</p></li>

	<li>Wood [105+24 HP, 260+8 MP, +0.6/1.2 NAP, +10 EDP, -10 FDP]:
	<p>Wood-traited; gains extra MP. Should focus on Dex and Wis.</p></li>
</ul>

<div id="ss-class-assassin-screenshots" style="text-align: center;">
<a target="_blank" href="http://i.imgur.com/qKKGlAT.png"><img src="/media/2013-09-30-poq/class/assassin-bow-thumb.png" alt="assassin-bow" title="Assassin using ‘Fury arrow’" /></a>

<a target="_blank" href="http://i.imgur.com/rtQkK6R.png"><img src="/media/2013-09-30-poq/class/assassin-thunder-attack-1-thumb.png" alt="assassin-thunder-attack-1" title="Slicing up some bandit scum with ‘Thunder attack’" /></a>

<a target="_blank" href="http://i.imgur.com/LlE9jk9.png"><img src="/media/2013-09-30-poq/class/assassin-thunder-attack-2-thumb.png" alt="assassin-thunder-attack-2" title="Not something you'd walk away from&hellip;" /></a>

<a target="_blank" href="http://i.imgur.com/dnMA3b7.png"><img src="/media/2013-09-30-poq/class/assassin-zzz-thumb.png" alt="assassin-zzz" title="“Hey! Help me out over here!” *Zzzz*" /></a>
</div>
<hr class="separator-inner">

<h4 class="separator">Wizard<span class="para-ref" id="class-wizard"><a href="#class-wizard"></a></span></h4>

<p>The Wizard is a support and offensive caster. The skillset includes an MP-stealing default attack, cures, heals, defensive buffs, a quick-regen flash buff, item identification, and teleportation. Base attributes: 15 Str, 30 Con, 25 Dex, 35 Sav, 30 Cha, 40 Wis. Variants:</p>

<ul>
	<li>Endurance [132+26 HP, 360+10 MP]:
	<p>Gains extra HP and MP. Should focus on Con and Wis. Good support variant.</p></li>

	<li>Earth [110+22 HP, 180+5 MP, +0.6/1.2 EAP, +10 WDP, -10 NDP]:
	<p>Earth-traited. Should focus on Con and Wis.</p></li>

	<li>Metal [110+22 HP, 180+5 MP, +0.6/1.2 MAP, +10 NDP, -10 FDP]:
	<p>Metal-traited. Should focus on Con and Wis.</p></li>
</ul>

<div id="ss-class-wizard-screenshots" style="text-align: center;">
<a target="_blank" href="http://i.imgur.com/DrwR78e.png"><img src="/media/2013-09-30-poq/class/wizard-snake-blade-thumb.png" alt="wizard-snake-blade" title="Wizard using ‘Snake-blade’" /></a>

<a target="_blank" href="http://i.imgur.com/6w8bleA.png"><img src="/media/2013-09-30-poq/class/wizard-hailstorm-thumb.png" alt="wizard-hailstorm" title="Bringing down the party with a hailstorm" /></a>

<a target="_blank" href="http://i.imgur.com/rmuxjId.png"><img src="/media/2013-09-30-poq/class/wizard-squall-thumb.png" alt="wizard-squall" title="Conjuring a squall" /></a>

<a target="_blank" href="http://i.imgur.com/I63sUOr.png"><img src="/media/2013-09-30-poq/class/wizard-swords-around-thumb.png" alt="wizard-swords-around" title="Whipping some swords 'round" /></a>
</div>
<hr class="separator-inner">

<h4 class="separator">Witch<span class="para-ref" id="class-witch"><a href="#class-witch"></a></span></h4>

<p>The Witch is an offensive caster which uses staves. The skillset includes an HP-stealing default attack (which is very useful with the offensive variant), a CAP buff, and some crowd-control &amp; debuffs. Base attributes are: 10 Str, 25 Con, 30 Dex, 30 Sav, 35 Cha, 45 Wis. Variants:</p>

<ul>
	<li>Offensive [120+24 HP, 200+6 MP, +0.8/1.6 CAP]:
	<p>Gains CAP and extra HP. Should focus on Str and Dex. Can be quite dangerous.</p></li>

	<li>Wood [100+20 HP, 200+6 MP, +0.6/1.2 NAP, +10 EDP, -10 MDP]:
	<p>Wood-traited. Should focus on Wis.</p></li>

	<li>Fire [100+20 HP, 200+6 MP, +0.6/1.2 FAP, +10 MDP, -10 WDP]:
	<p>Fire-traited. Should focus on Wis.</p></li>
</ul>

<div id="ss-class-witch-screenshots" style="text-align: center;">
<a target="_blank" href="http://i.imgur.com/e1beeuU.png"><img src="/media/2013-09-30-poq/class/witch-burning-all-thumb.png" alt="witch-burning-all" title="Witch burning all the things" /></a>

<a target="_blank" href="http://i.imgur.com/QlelCaS.png"><img src="/media/2013-09-30-poq/class/witch-corpse-flame-thumb.png" alt="witch-corpse-flame" title="Still burnin'" /></a>

<a target="_blank" href="http://i.imgur.com/F7HOtu2.png"><img src="/media/2013-09-30-poq/class/witch-easy-capture-thumb.png" alt="witch-easy-capture" title="Casting a debuff" /></a>

<a target="_blank" href="http://i.imgur.com/GtPsUIb.png"><img src="/media/2013-09-30-poq/class/witch-grass-thumb.png" alt="witch-grass" title="Laying down some man-eating grass" /></a>
</div>
<hr class="separator-inner">

<h3 class="separator">Gameplay<span class="para-ref" id="gameplay-depth"><a href="#gameplay-depth"></a></span></h3>

<p>The gameplay itself is not too different from <em>Baldur's Gate</em>. Anyone familiar with RPGs should find it welcoming. The elements make for a fun build challenge, and your characters' restrictors can become serious sources of fear.</p>

<p>Keys Q, W, E, and R can be bound to attack skills for the primary slot (default attack; left mouse button), whereas keys A, S, D, and F can be bound to all skills for the secondary slot (right mouse button).</p>

<p>Unlike most ARPGs, the camera is independent of the character(s) position and the player can pan around the map freely. Multiple characters can be selected by clicking and dragging over the characters in the game world, or individually by selecting portraits from the character bar or with keys 1&ndash;5. Each character has their own inventory and the player has a single stash. Items can be moved directly between characters by dropping them on portraits in the character bar.</p>

<p>Characters can be moved individually around the map, similar to <em>Baldur's Gate</em>. Due to fog of war (black &amp; soft), it can be useful to send a scout ahead.</p>

<div id="ss-gameplay-1-ui-fow" style="text-align: center;">
<a target="_blank" href="http://i.imgur.com/Jph6bOc.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-1-skills-thumb.png" alt="gameplay-1-skills" title="Upgrade interface and Paladin skills" /></a>

<a target="_blank" href="http://i.imgur.com/IMDNSL0.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-1-inventory-thumb.png" alt="gameplay-1-inventory" title="Inventory" /></a>

<a target="_blank" href="http://i.imgur.com/HYnm62c.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-1-not-guilty-thumb.png" alt="gameplay-1-not-guilty" title="Not guilty" /></a>

<a target="_blank" href="http://i.imgur.com/Sm8akhG.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-1-fog-of-war-thumb.png" alt="gameplay-1-fog-of-war" title="Fog of war" /></a>
</div>
<hr class="separator-inner">

<p>Once a character is attacking an enemy, they will continue to attack automatically using the current skill in the primary slot. In singleplayer, the character will also pick a new target automatically, which is very necessary when juggling up to five characters. The game can be paused to queue up the next action, although there is no indication of which action will be performed once the game is unpaused (much unlike <a target="_blank" href="https://en.wikipedia.org/wiki/Star_Wars:_Knights_of_the_Old_Republic"><em>Star Wars: Knights of the Old Republic</em></a>).</p>

<p>Combat is initially slow due to low-grade weapons with low attack speed and doesn't become too fast as the player advances (especially in singleplayer). Some classes, such as the Muscleman, are slower than others, but make up for it in offensive or defensive power &mdash; or, conversely, are faster but more weak. The Paladin, of course, ignores all of this balance nonsense and runs around like he owns the place.</p>

<p>Narrative choices are presented in a textual dialog box which unfortunately requires use of the mouse. The sometimes-broken mission log stores accepted quests and completed quests, and the story log book stores a list of events per chapter. Cutscenes are fully voiced, sub-titled, and dialogue is skippable.</p>

<div id="ss-gameplay-2-cutscenes-and-dialogue" style="text-align: center;">
<a target="_blank" href="http://i.imgur.com/2KP0KUG.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-2-cutscene-zhao-qian-thumb.png" alt="gameplay-2-cutscene-zhao-qian" title="Cutscene with Zhao Qian" /></a>

<a target="_blank" href="http://i.imgur.com/ViSwHCI.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-2-dialogue-granny-thumb.png" alt="gameplay-2-dialogue-granny" title="Chattin' with an old lady" /></a>

<a target="_blank" href="http://i.imgur.com/YFK2JxR.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-2-dialogue-gramps-thumb.png" alt="gameplay-2-dialogue-gramps" title="Chattin' with an old man" /></a>

<a target="_blank" href="http://i.imgur.com/3xXbfaA.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-2-dialogue-free-thumb.png" alt="gameplay-2-dialogue-free" title="Freestanding dialogue" /></a>
</div>

<div id="ss-gameplay-2-more-ui" style="text-align: center;">
<a target="_blank" href="http://i.imgur.com/7vPAeEy.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-2-ui-mission-log-thumb.png" alt="gameplay-2-ui-mission-log" title="Mission/quest log book" /></a>

<a target="_blank" href="http://i.imgur.com/RzaL6vS.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-2-ui-log-book-thumb.png" alt="gameplay-2-ui-log-book" title="Story log book" /></a>

<a target="_blank" href="http://i.imgur.com/f0KTcHM.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-2-ui-map-local-thumb.png" alt="gameplay-2-ui-map-local" title="Local map" /></a>

<a target="_blank" href="http://i.imgur.com/tlvIr09.png"><img src="/media/2013-09-30-poq/gameplay/gameplay-2-ui-map-national-thumb.png" alt="gameplay-2-ui-map-national" title="National map" /></a>
</div>
<hr class="separator-inner">

<p>Another fancy mechanic is crafting, which is only accessible through NPC blacksmiths and Paladins (with the ‘Art of forging’ skill). Crafting combines materials to create equipment of nearly any type. In singleplayer this extends to some unwearable items for quests.</p>

<p>Flesh-based material &ndash; tendon, bone, and skin &ndash; can be looted from nearly every non-human mob, whereas ore and wood have to be gathered from sparsely-marked rocks and trees. High stat (Dex especially) and movement speed materials were especially coveted and endlessly hunted down.</p>

<p><em>Prince of Qin</em> skips the part where materials have to be processed (much unlike <a target="_blank" href="https://en.wikipedia.org/wiki/Ultima_Online"><em>Ultima Online</em></a>) and simply combines the attributes of the materials (with a chance of extra random attributes being added). The item level of the crafted equipment depends on the item level of the materials and the skill level of the crafter, which is only a maximum of 6 for Paladins. Due to this, players would use the blacksmith in multiplayer Xianyang, which is slightly better than a maxed Paladin.</p>

<p>Crafters can also inlay gems in main equipment items. Crafted equipment are limited to one socket whereas store-bought equipment can have a maximum of three. An early-patched bug with crafting was exploited to inlay an unlimited number of materials in an item, leading to exceedingly powerful equipment.</p>

<div id="ss-crafting" style="text-align: center;">
<a target="_blank" href="http://i.imgur.com/qZLQDSY.png"><img src="/media/2013-09-30-poq/crafting/crafting-boots-thumb.png" alt="crafting-boots" title="Crafting boots in Chencheng" /></a>

<a target="_blank" href="http://i.imgur.com/uCEE2Kn.png"><img src="/media/2013-09-30-poq/crafting/crafting-socketing-thumb.png" alt="crafting-socketing" title="Inlaying a gem in a dagger" /></a>

<a target="_blank" href="http://i.imgur.com/nsdbSKM.png"><img src="/media/2013-09-30-poq/crafting/crafting-socket-exploit-1-thumb.png" alt="crafting-socket-exploit-1" title="Socketing exploit" /></a>

<a target="_blank" href="http://i.imgur.com/Uha6Gja.png"><img src="/media/2013-09-30-poq/crafting/crafting-socket-exploit-2-thumb.png" alt="crafting-socket-exploit-2" title="Criminal scum!" /></a>
</div>
<hr class="separator-inner">

<p><em>Prince of Qin</em> is commonly considered an ARPG, but I find some fault with this label &mdash; or at least in its ‘pure’ sense, even though ARPG is not tightly defined. Rather, <em>Prince of Qin</em> is somewhere in-between ARPG (such as the famed <em>Diablo</em> series) and traditional CRPG (such as <em>Baldur's Gate</em><sup><a href="#fn-baldurs-gate">20</a></sup>) with its pacing. Auto-attack really reinforces that point. Players coming from a fast-paced game like <em>Diablo II</em> can cause <em>Prince of Qin</em> to feel sluggish. On the other hand, it employs powerful items and attributes (especially through crafting), following the nature of ARPGs from its time period (which undeniably includes <em>Diablo II</em>).</p>

<p>Several classes can move about swiftly through skills, but it only really becomes ARPG-like in multiplayer, where movement speed is more accessible and where PvP garners a different kind of attention and discipline. On that note, multiplayer might've never happened if it weren't for crafting, which is notably absent in any ARPG from that period (as far as I'm aware). <em>Prince of Qin</em>'s real downfall comes from its bugs and neglected player base. <em>Diablo II</em>, on the other hand, still has a large following to this day; its purity and innovation in the way of the ARPG has certainly served it well.</p>

<p>Despite all of its problems, it still stands as an excellently-crafted RPG in my eye. The artwork direction, music, story, and fantasy are infallibly fitting to its setting. Had it simply received better translation and voice acting, it would stand a bit more prominently as a relic today &mdash; although it certainly deserves a crusade against the more heinous bugs.</p>


<h2 class="separator">Intravenous RPG<span class="para-ref" id="intravenous-rpg"><a href="#intravenous-rpg"></a></span></h2>

<p>So, how did this attachment begin?</p>

<p>For me, it all began during the latter snow-covered months of 2002. My brother and I were scouring the net for demos to play (as was our wont) and found the multiplayer demo. It only had access to two classes up to a level cap of 5, which restricted us to the starting city (Yangzhou) and two enemy maps.</p>

<p>We were obsessed. We played numerous characters to the level cap with excitement, despite there not being anything to actually accomplish or explore in our limited play zone. The true factors of interest escape my memory, but they were likely due to the excellent ancient Chinese aesthetic and my love of role-playing (which <em>Prince of Qin</em> is very responsible for extending).</p>

<p>The control over agency and narrative branching in RPGs has always been appealing. When combined with attribute and ability customization (as the label "RPG" now almost universally assumes), these games can become incredible time sinks, despite often lacking any actual designed goal beyond the story (if there is one). In <em>Prince of Qin</em>'s multiplayer (which dominated our time), there certainly wasn't one.</p>

<p>The aesthetic captured ancient China like I'd never seen before &mdash; and since. My exposure to MMORPGs at the time was very minimal, if at all, and in the later years I was always disappointed by the aesthetics of Asian-themed MMOs. They were tacky and lackluster. Even Object Software's later games &ndash; specifically, <em>Seal of Evil</em> and <em>World of Qin 2</em> &ndash; began to slip away. As soon as realtime 3D was utilized, the magic was lost.</p>

<p>Many polygons have to be pushed to contend with the quality of pre-rendered 3D art and tailored 2D art (especially highly detailed background art, such as <em>Prince of Qin</em>'s). Back then, consumer hardware certainly couldn't handle such density, so developers of 2.5D games were limited to high-quality (but inflexible) pre-rendered 3D or low quality (but flexible) realtime 3D. I didn't understand the move to realtime 3D when its quality was so severely limited, but I digress.</p>

<p>Looking back, it's strange that I got hooked so easily. Nowadays story tends to hold more weight than aesthetic as a requirement of my interest. This is possibly due to disappointments over the years more than anything else.</p>

<p>Christmas of 2002, we asked for and received the full game as a gift. We peeked under the wrapping and were driven mad because we weren't allowed to open it until Christmas day. There's a lesson for you, kids: don't peek.</p>

<p>Despite numerous bugs and exploits, the official multiplayer servers were a blast. “Stacking”, a prominent exploit, involved the combination of equipment through a bug with the stacking mechanic intended for medicine items. The combined attributes of the stack would apply to your character when you wore it.</p>

<p>One particular attribute, movement speed, was a big target for stackers. This attribute was rare to come by, and the store-bought items were low level and otherwise of low grade. Because the exploit utilized items that required attributes above the character's base attributes, it was a challenge to find and create items to reach the movement speed cap &mdash; but reach it we did.</p>

<p>Movement speed was of particular interest to hunters, who wanted to do “mat runs” faster. There are very few hunting maps for end-game players, and they were often a point of contention in the community due to the relatively long refresh cycle of material sources.</p>

<p>Soon after we started playing, I sucked two of my cousins and a friend into the game. For all its glory, multiplayer only lasted about two years. The game undoubtedly suffered due to the release of <em>World of Qin</em>. Patching stopped near the end of 2004 with version 1.30 as Object Software jumped ship to online-only games. In quelling exploits like stacking and the demo level glitch, the patches ruined some fundamental mechanics.</p>

<p>The probabilities of accuracy and dodging were effectively useless somewhere in patches 1.22-1.28, and chat message length was reduced to 30 characters in patch 1.30, effectively ruining interaction. Server instability rose and most of the players moved on.</p>

<p>Strategy First kept the servers up for a short while into the end of 2004, but there were very few consistent players. Once the servers shut down, we started our own server.</p>


<h2 class="separator">Interim: shimmers of fun<span class="para-ref" id="interim-shimmers-of-fun"><a href="#interim-shimmers-of-fun"></a></span></h2>

<p>Our first dedicated server started in December 2004. I can't recall the patch we used, but stacking was certainly possible &mdash; I remember having “server maintenance” where we inspected the players' characters for signs of stacking.</p>

<p>This died down after only a few months. Stability in general was always rather poor for non-Battle.Net servers (and even then&hellip;). Unlike Battle.Net, private dedicated servers kept items in the world indefinitely instead of deleting them after some matter of minutes. Because of this, our server had to be restarted frequently to avoid bogging down the game.</p>

<p>In October 2006, we came back as the “Legend Server” and were a bit more clever. Utilizing my adventures in programming (which I only started in February 2005), we released a user patch (1.0, map fix, 1.1a) with a terrible hand-written installer which mixed various official patches to quell map issues. We also created a launcher to check server status and to login <em>using a password</em> (albeit in a fake manner &mdash; to this day the actual password handling has not been figured out).</p>

<p>I have no idea how long this run lasted, but it was likely around the same amount of time as the first one. It's possible that it extends into what I'm calling the third run in 2007, but due to no activity in my archives during the interim, I find that unlikely.</p>

<p>In November 2007, we started up the Legend Server again. This saw LS patch 2.0 and an updated launcher, but probably only lasted a few months. There was another likely-short run in October 2008 which saw no increase in the level of cleverness.</p>

<p>Finally in March 2009, after a culmination of over 4 years of programming knowledge, I built a passthrough server to handle authentication and we started our fourth run. We also updated the LS patch to 2.1 &amp; 2.2 and rebuilt the launcher. If I recall correctly, we were using a base patch that fixed stacking, but the LS patch was still incorporating multiple official patches.</p>

<p>Since then, we have not run another server. You might've noticed a pattern with the months we were running: mostly late in the year. I think this is due to the mood we had when we first started playing the game and the ever-vehement nostalgia we felt when reminiscing. It is no coincidence that I am writing this at the end of September.</p>

<p>Throughout 2010, I was deeply invested in deciphering data formats and the network protocol. During my investigations on <em>World of Qin</em>, I eventually got my hands on actual production server software, although it took a few long nights to decipher the poorly-translated Chinese instructions to get it working. This led to the discovery of the command system in <em>Prince of Qin</em> (as well as <em>World of Qin</em>) and the set of XOR ciphers for data and the network protocol (yes&hellip; XOR).</p>

<p>With that information, I was designing passthrough servers to inspect the actual messages the client and server were sending to better implement authentication, but these weren't completed. I moved on to greater things and am currently invested in sorting out my own future.</p>


<h2 class="separator">Undying, or undead?<span class="para-ref" id="undying-or-undead"><a href="#undying-or-undead"></a></span></h2>

<p>It's been nearly <em>eleven years</em> since our first encounter. In the past three years alone I've grown my knowledge more than in the remaining eight of that span. In 2010, everything started to click together and I finally feel that I've become a decent programmer. I don't know where I would be without <em>Prince of Qin</em> as a source of inspiration and as an enigma to study. I suspect something else would have taken its place &ndash; to largely <em>waste</em> my youth &ndash; but such theorizing is often fruitless.</p>

<p>The least I want to do is enshrine the game (especially its media) on the net. I have a wealth of information about the game and its various backend systems that can show where Object Software failed and where they succeeded. For now that consists of this article; later I will collect the information on my homesite.</p>

<p>I don't quite know what lies ahead for the game itself, but I have plenty of ideas. Ideally I'd just remake it. There're so many issues that it'd just be better to start over. But time is against me. An obsession such as this doesn't pay the bills; I have employment to worry about before I can do anything substantial, and even then&hellip;</p>

<p>As far as that unrealistic future goes, I'd start with UI handling and scene rendering (the latter of which I've <a target="_blank" href="http://i.imgur.com/hkwMj9R.jpg">done</a> <a target="_blank" href="http://i.imgur.com/HCOvJcN.jpg">before</a>). The largest remaining mess of an enigma is animation, so I'd tackle that and move on to actor rendering and dynamics. It's probably a good idea to maintain legacy support, so I'd have to implement the command system as well. The network protocol carries the commands verbatim, which explains lag with more than a handful of players (over, you guessed it, TCP/IP), but it shouldn't be hard to translate to a more compact serialized form later on.</p>

<p>Actually, all of the data formats are rather creepy. It's probably a good idea to rework the asset system and just upconvert everything to new formats.</p>

<p>Or I could ignore the presentational stuff and go straight to the logic with a server and local translator. The server could implement its own compact network protocol and the translator would sit locally and convert between the legacy protocol and the new protocol. That'd be a cheaper way to handle authentication, actually.</p>

<p>But I'm not too interested in preserving multiplayer at this point. Being able to play singleplayer on modern systems without annoyance is more important. On that note, I'd also love to do an LP of the game. It'd force me to actually complete singleplayer and I'd get to document the entire game. That'd be a lot of fun. Maybe I'll do it when I'm old and grumpy.</p>

<p>In the meantime, I have enough information on hand to make easy mods. I've been fantasizing about making multiplayer obscenely difficult &mdash; maybe increase the enemy count, increase their stats, elemental effect chance, etc. Just for kicks. Maybe dabble in some custom maps, too. It'd also be nice to hack in a windowed mode.</p>

<p>Or&hellip; perhaps no future? All this thinking about <em>Prince of Qin</em> is giving me more ideas for an RPG I've been mulling over. My attachment to <em>Prince of Qin</em> fueled a major growth period through 2006&ndash;2010 (although dwarfed by 2010&ndash;present), but I think I've just about reached the limit of gain.</p>

<p>Remaking anything with a critical eye can be instructive and full of lessons, but not too many people care about the game. I'd just be gratifying myself. All of my game ideas are more compelling than spending countless hours peering into the bit ether and making divinations. Not to mention designing my own systems would be faster than deciphering existing ones.</p>

<p>It doesn't help that <span title="magic wavy hands">the law</span> frowns upon such things. Frankly, it's all rather irrational. Yet here I am.</p>

<p>Which is to say, who knows?</p>


<footer id="footnotes">
<h4 class="separator sep_footnotes">Notes<span class="para-ref"><a href="#footnotes"></a></span></h4>

<ol>
	<li id="fn-did-you-hear-it">Did you just play back its death cry in your head? DID YOU? &hellip; <em>Wait</em>, maybe it's a Zhuyan. CAN YOU HEAR THAT ONE TOO?</li>

	<li id="fn-music">I have arranged an album for the soundtrack with extra tracks and liner notes, but am concerned about the <span title="eh, screw it">legality</span> of releasing it publicly. Until I get some kind of <span title="ha!">permission</span>, one fella has kindly <a target="_blank" href="https://www.youtube.com/playlist?list=PL72ADD74046D8FA45">uploaded the music</a> verbatim to YouTube. Also, the audio is in dire need of remastering, but I doubt I'd ever be able to convince the studio &ndash; who have proven very difficult to triangulate &ndash; to do it.</li>

	<li id="fn-dou-shen">At least not until <a target="_blank" href="http://ds.object.com.cn">《斗神》</a> (<em>God of War</em>; pinyin: Dòu Shén), which is currently in beta. The English PR apparently calls it “206 BC”, which happens to be the date of the Qin Dynasty's downfall&hellip; This is mostly in the same vein as <em>World of Qin 2</em> in that it utilizes realtime 3D, but I don't know how well it plays. Even though it's in beta, the <a target="_blank" href="http://i.imgur.com/5BVYPBl.jpg">environment</a> <a target="_blank" href="http://i.imgur.com/KF9xuQn.jpg">art</a> is <a target="_blank" href="http://i.imgur.com/oHIGBmI.jpg">exceedingly</a> <a target="_blank" href="http://i.imgur.com/bK4pK0N.jpg">stellar</a>, as <a target="_blank" href="http://i.imgur.com/tex1SfP.jpg">usual</a>. <a target="_blank" href="http://www.object.com.cn/NewsDisplay-2183.aspx">This article</a> speaks of its lighting black magic.</li>

	<li id="fn-death-of-first-emperor">Reportedly due to ingesting mercury pills which were ironically intended to make him immortal. Not too smart.</li>

	<li id="fn-scholar-count">An account by Wei Hong in the second century CE added another 700 scholars to this figure.</li>

	<li id="fn-heir-apparent">The letter the First Emperor wrote to Fusu implied that he was absolved and was to be his successor, but neither Fusu nor Meng Tian knew of this letter as Zhao Gao and Li Si secretly withheld it.</li>

	<li id="fn-shiji-p190">SHIJI p. 190.</li>

	<li id="fn-fusu-reasons">Another suggestion is that Fusu simply did not believe someone would dare to forge the edict. Unfortunately, very little is known about Fusu, but his actions line up with descriptions of his character. Or at least that's what the Confucians wanted us to think.</li>

	<li id="fn-shiji-p191">SHIJI p. 191.</li>

	<li id="fn-li-si-execution"><span title="is there a more cruel person? seriously">Zhao Gao</span> sentenced Li Si to execution by <a target="_blank" href="https://en.wikipedia.org/wiki/Five_Punishments#The_Five_Punishments_in_Ancient_China">the Five Punishments</a>, which included cutting off the nose, amputation of a foot (or two; or a kneecap), castration, and, in Li Si's case, cutting in half at the waist. Wikipedia's article on Zhao Gao suggests the Five Punishments (or Five Penalties, as <em>Shiji</em> puts it) were Li Si's own invention, but I cannot find any mention of this in the <em>Shiji</em>. It seems to have existed in various forms since the Warring States period.</li>

	<li id="fn-ziying-heredity">There is some debate about this. Some say he was Fusu's grandson, but the <em>Shiji</em> states that Ziying consulted with his own sons (and Han Tan) when he was to be crowned emperor, suggesting that Ziying himself was old enough to have children of a significant age. Fusu was only in his 30s when he died, and the reasoned maximum age of Ziying &ndash; were he a son of Fusu &ndash; would have been 19, with his own sons at 1&ndash;2 years of age, meaning he would not have been able to consult with them (or at least wouldn't gain much in doing so). It is suggested instead that Ziying is an uncle of Huhai.</li>

	<li id="fn-shiji-p205">SHIJI p. 205.</li>

	<li id="fn-ziying-king">Ziying took the title King of Qin (king being a more traditional title) to suggest he would act differently from the way the emperors had.</li>

	<li id="fn-race-to-guanzhong"><a target="_blank" href="https://en.wikipedia.org/wiki/Emperor_Yi_of_Chu">Emperor Yi of Chu</a> (楚义帝; pinyin: Chu Yìdì), also known as King Huai II, promised whoever first entered Guanzhong, the heartland of Qin, would be crowned the King of Guanzhong. When Xiang Yu saw that Liu Bang beat him to Xianyang, he attempted to have Liu assassinated at a banquet, but failed. Liu, fearing a battle with Xiang's 400,000 troops, evacuated Xianyang. Xiang and his troops commited various atrocities in Xianyang, set fire to the Epang Palace (阿房宮; pinyin: Ēpáng Gōng), burned Qin records, and so on.</li>

	<li id="fn-forces-of-evil">i.e., <span title="kill it with fire">PulseAudio</span>, avconv &amp; co.</li>

	<li id="fn-damned-brutes">It kind of makes sense &ndash; brute force, strength, etc. &ndash; but I've always disliked it. The elemental mechanic is a lot more fun to play with. In my opinion, untraited characters should be especially vulnerable to elemental effects to counter the exceedingly powerful “common” attack power.</li>

	<li id="fn-maximum-level">After level 30, each subsequent level requires 10% more experience than the previous level. As far as I am aware, no person has ever reached level 99 in multiplayer nor singleplayer without hacking or abusing glitches.</li>

	<li id="fn-paladin-bows">Unless you're a madman like me. <span title="“bring it”">Bow-wielding Earth Paladin</span> for great justice.</li>

	<li id="fn-mm-endurance-intended-traits">The game claims this variant increases HP, but it does not.</li>

	<li id="fn-baldurs-gate">Which I have not played. “Father, I have sinned.” &amp; co. I would wager many of the complaints people might make against <em>Prince of Qin</em> today could also be said of the original <em>Baldur's Gate</em> release. Nostalgia is a powerful thing.</li>
</ol>
</footer>


	]]></content>
</entry>

</feed>